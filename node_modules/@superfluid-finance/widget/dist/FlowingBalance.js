import { Fragment as _Fragment, jsx as _jsx } from "react/jsx-runtime";
import { memo } from "react";
import { formatEther } from "viem";
import useFlowingBalance, { ANIMATION_MINIMUM_STEP_TIME, } from "./useFlowingBalance.js";
import { useSignificantFlowingDecimal } from "./useSignificantFlowingDecimal.js";
import { toFixedUsingString } from "./utils.js";
export default memo(function FlowingBalance({ startingBalance, startingBalanceDate, flowRate, }) {
    const flowingBalance = useFlowingBalance(startingBalance, startingBalanceDate, flowRate);
    const decimalPlaces = useSignificantFlowingDecimal(flowRate, ANIMATION_MINIMUM_STEP_TIME);
    return (_jsx(_Fragment, { children: decimalPlaces
            ? toFixedUsingString(formatEther(flowingBalance), decimalPlaces)
            : formatEther(flowingBalance) }));
});
