import { BaseError } from "viem";
import { useContractWrite, usePrepareContractWrite, useWaitForTransaction } from "wagmi";
import { ContractWrite } from "./ContractWrite.js";
export type ContractWriteResult = {
    contractWrite: ContractWrite;
    prepareResult: ReturnType<typeof usePrepareContractWrite>;
    writeResult: ReturnType<typeof useContractWrite>;
    transactionResult: ReturnType<typeof useWaitForTransaction>;
    currentError: BaseError | null;
};
export type ContractWriteManagerProps = {
    prepare: boolean;
    contractWrite: ContractWrite;
    onChange?: (result: ContractWriteResult) => void;
};
export declare function ContractWriteManager({ prepare: _prepare, contractWrite: contractWrite_, onChange, }: ContractWriteManagerProps): null;
//# sourceMappingURL=ContractWriteManager.d.ts.map