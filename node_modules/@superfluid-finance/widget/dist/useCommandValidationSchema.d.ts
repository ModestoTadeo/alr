import { z } from "zod";
import { SubscribeCommand, WrapIntoSuperTokensCommand } from "./commands.js";
export declare const useCommandValidationSchema: () => z.ZodEffects<z.ZodEffects<z.ZodEffects<z.ZodObject<{
    wrapIntoSuperTokensCommand: z.ZodOptional<z.ZodEffects<z.ZodType<WrapIntoSuperTokensCommand, z.ZodTypeDef, WrapIntoSuperTokensCommand>, WrapIntoSuperTokensCommand, WrapIntoSuperTokensCommand>>;
    subscribeCommand: z.ZodEffects<z.ZodType<SubscribeCommand, z.ZodTypeDef, SubscribeCommand>, SubscribeCommand, SubscribeCommand>;
}, "strip", z.ZodTypeAny, {
    subscribeCommand: SubscribeCommand;
    wrapIntoSuperTokensCommand?: WrapIntoSuperTokensCommand | undefined;
}, {
    subscribeCommand: SubscribeCommand;
    wrapIntoSuperTokensCommand?: WrapIntoSuperTokensCommand | undefined;
}>, {
    subscribeCommand: SubscribeCommand;
    wrapIntoSuperTokensCommand?: WrapIntoSuperTokensCommand | undefined;
}, {
    subscribeCommand: SubscribeCommand;
    wrapIntoSuperTokensCommand?: WrapIntoSuperTokensCommand | undefined;
}>, {
    subscribeCommand: SubscribeCommand;
    wrapIntoSuperTokensCommand?: WrapIntoSuperTokensCommand | undefined;
}, {
    subscribeCommand: SubscribeCommand;
    wrapIntoSuperTokensCommand?: WrapIntoSuperTokensCommand | undefined;
}>, {
    subscribeCommand: SubscribeCommand;
    wrapIntoSuperTokensCommand?: WrapIntoSuperTokensCommand | undefined;
}, {
    subscribeCommand: SubscribeCommand;
    wrapIntoSuperTokensCommand?: WrapIntoSuperTokensCommand | undefined;
}>;
//# sourceMappingURL=useCommandValidationSchema.d.ts.map