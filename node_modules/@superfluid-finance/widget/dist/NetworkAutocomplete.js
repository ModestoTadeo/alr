import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Autocomplete, Stack, TextField, Typography } from "@mui/material";
import { Controller, useFormContext } from "react-hook-form";
import NetworkAvatar from "./NetworkAvatar.js";
import { useWidget } from "./WidgetContext.js";
export default function NetworkAutocomplete() {
    const { control: c } = useFormContext();
    const { networks } = useWidget();
    const autocompleteOptions = networks;
    return (_jsx(Controller, { control: c, name: "network", render: ({ field: { value, onChange, onBlur } }) => (_jsx(Autocomplete, { value: value, disableClearable: !!value, isOptionEqualToValue: (option, value) => option.id === value.id, options: autocompleteOptions, autoHighlight: true, getOptionLabel: (option) => option.name, renderOption: (props, option) => (_jsxs(Stack, { ...props, component: "li", direction: "row", alignItems: "center", spacing: 1, children: [_jsx(NetworkAvatar, { network: option }), _jsx(Typography, { "data-testid": "network-option", children: option.name })] })), renderInput: (params) => (_jsx(TextField, { "data-testid": "widget-network-selection", ...params, inputProps: {
                    ...params.inputProps,
                    sx: { cursor: "pointer" },
                }, InputProps: {
                    ...params.InputProps,
                    startAdornment: value ? (_jsx(NetworkAvatar, { network: value, AvatarProps: { sx: { ml: 1 } } })) : null,
                }, size: "small", placeholder: "Network" })), onChange: (_event, newValue) => onChange(newValue), onBlur: onBlur })) }));
}
