import { z } from "zod";
export declare const existentialNFTSchema: z.ZodObject<{
    name: z.ZodString;
    symbol: z.ZodString;
    owner: z.ZodUnion<[z.ZodEffects<z.ZodString, `0x${string}`, string>, z.ZodEffects<z.ZodString, "", string>]>;
    image: z.ZodOptional<z.ZodString>;
    deployments: z.ZodRecord<z.ZodType<1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111, z.ZodTypeDef, 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111>, z.ZodUnion<[z.ZodEffects<z.ZodString, `0x${string}`, string>, z.ZodNull]>>;
}, "strip", z.ZodTypeAny, {
    symbol: string;
    name: string;
    owner: "" | `0x${string}`;
    deployments: Partial<Record<1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111, `0x${string}` | null>>;
    image?: string | undefined;
}, {
    symbol: string;
    name: string;
    owner: string;
    deployments: Partial<Record<1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111, string | null>>;
    image?: string | undefined;
}>;
/**
 * The details of the payment options for the checkout flow.
 */
export interface ExistentialNFT extends z.input<typeof existentialNFTSchema> {
}
//# sourceMappingURL=ExistentialNFT.d.ts.map