/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x30aE282CF477E2eF28B14d0125aCEAd57Fe1d7a1)
 * - [__View Contract on Op Mainnet Optimism Explorer__](https://explorer.optimism.io/address/0x1fA76f2Cd0C3fe6c399A80111408d9C42C0CAC23)
 * - [__View Contract on Bnb Smart Chain Bsc Scan__](https://bscscan.com/address/0x2AcdD61ac1EFFe1535109449c31889bdE8d7f325)
 * - [__View Contract on Gnosis Gnosis Chain Explorer__](https://blockscout.com/xdai/mainnet/address/0x8082e58681350876aFe8f52d3Bf8672034A03Db0)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x2581c27E7f6D6AF452E63fCe884EDE3EDd716b32)
 * - [__View Contract on Base Basescan__](https://basescan.org/address/0x5D0acD0864Ad07ba4E1E0474AE69Da87482e14A9)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xf01825eAFAe5CD1Dab5593EFAF218efC8968D272)
 * - [__View Contract on Avalanche Fuji Snow Trace__](https://testnet.snowtrace.io/address/0x30aE282CF477E2eF28B14d0125aCEAd57Fe1d7a1)
 * - [__View Contract on Avalanche Snow Trace__](https://snowtrace.io/address/0x8082e58681350876aFe8f52d3Bf8672034A03Db0)
 * - [__View Contract on Optimism Sepolia Blockscout__](https://optimism-sepolia.blockscout.com/address/0xe567b32C10B0dB72d9490eB1B9A409C5ADed192C)
 */
export declare const autoWrapManagerABI: readonly [{
    readonly stateMutability: "nonpayable";
    readonly type: "constructor";
    readonly inputs: readonly [{
        readonly name: "_cfa";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "_minLower";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }, {
        readonly name: "_minUpper";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }];
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "limitGiven";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }, {
        readonly name: "minLimit";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }];
    readonly name: "InsufficientLimits";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "expirationTimeGiven";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }, {
        readonly name: "timeNow";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "InvalidExpirationTime";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "strategy";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "InvalidStrategy";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "caller";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "expectedCaller";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "UnauthorizedCaller";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "superToken";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "UnsupportedSuperToken";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "index";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "WrapNotRequired";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "lowerLimit";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }, {
        readonly name: "upperLimit";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }];
    readonly name: "WrongLimits";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "ZeroAddress";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "strategy";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "AddedApprovedStrategy";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "lowerLimit";
        readonly internalType: "uint64";
        readonly type: "uint64";
        readonly indexed: false;
    }, {
        readonly name: "upperLimit";
        readonly internalType: "uint64";
        readonly type: "uint64";
        readonly indexed: false;
    }];
    readonly name: "LimitsChanged";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "previousOwner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "newOwner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "OwnershipTransferred";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "strategy";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "RemovedApprovedStrategy";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: true;
    }, {
        readonly name: "wrapAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "WrapExecuted";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: true;
    }, {
        readonly name: "user";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "superToken";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "strategy";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "liquidityToken";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "expiry";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "lowerLimit";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "upperLimit";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "WrapScheduleCreated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: true;
    }, {
        readonly name: "user";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "superToken";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "strategy";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "liquidityToken";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }];
    readonly name: "WrapScheduleDeleted";
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "strategy";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "addApprovedStrategy";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "approvedStrategies";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "cfaV1";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "contract IConstantFlowAgreementV1";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "user";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "liquidityToken";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "checkWrap";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "index";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "checkWrapByIndex";
    readonly outputs: readonly [{
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "superToken";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "strategy";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "liquidityToken";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "expiry";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }, {
        readonly name: "lowerLimit";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }, {
        readonly name: "upperLimit";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }];
    readonly name: "createWrapSchedule";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "user";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "liquidityToken";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "deleteWrapSchedule";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "index";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "deleteWrapScheduleByIndex";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "user";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "liquidityToken";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "executeWrap";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "index";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "executeWrapByIndex";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "user";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "liquidityToken";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getWrapSchedule";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "struct IManager.WrapSchedule";
        readonly type: "tuple";
        readonly components: readonly [{
            readonly name: "user";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "superToken";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "strategy";
            readonly internalType: "contract IStrategy";
            readonly type: "address";
        }, {
            readonly name: "liquidityToken";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "expiry";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }, {
            readonly name: "lowerLimit";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }, {
            readonly name: "upperLimit";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }];
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "index";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "getWrapScheduleByIndex";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "struct IManager.WrapSchedule";
        readonly type: "tuple";
        readonly components: readonly [{
            readonly name: "user";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "superToken";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "strategy";
            readonly internalType: "contract IStrategy";
            readonly type: "address";
        }, {
            readonly name: "liquidityToken";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "expiry";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }, {
            readonly name: "lowerLimit";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }, {
            readonly name: "upperLimit";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }];
    }];
}, {
    readonly stateMutability: "pure";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "user";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "liquidityToken";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getWrapScheduleIndex";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "minLower";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "minUpper";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "owner";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "strategy";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "removeApprovedStrategy";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "renounceOwnership";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "lowerLimit";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }, {
        readonly name: "upperLimit";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }];
    readonly name: "setLimits";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newOwner";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "transferOwnership";
    readonly outputs: readonly [];
}];
/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x30aE282CF477E2eF28B14d0125aCEAd57Fe1d7a1)
 * - [__View Contract on Op Mainnet Optimism Explorer__](https://explorer.optimism.io/address/0x1fA76f2Cd0C3fe6c399A80111408d9C42C0CAC23)
 * - [__View Contract on Bnb Smart Chain Bsc Scan__](https://bscscan.com/address/0x2AcdD61ac1EFFe1535109449c31889bdE8d7f325)
 * - [__View Contract on Gnosis Gnosis Chain Explorer__](https://blockscout.com/xdai/mainnet/address/0x8082e58681350876aFe8f52d3Bf8672034A03Db0)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x2581c27E7f6D6AF452E63fCe884EDE3EDd716b32)
 * - [__View Contract on Base Basescan__](https://basescan.org/address/0x5D0acD0864Ad07ba4E1E0474AE69Da87482e14A9)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xf01825eAFAe5CD1Dab5593EFAF218efC8968D272)
 * - [__View Contract on Avalanche Fuji Snow Trace__](https://testnet.snowtrace.io/address/0x30aE282CF477E2eF28B14d0125aCEAd57Fe1d7a1)
 * - [__View Contract on Avalanche Snow Trace__](https://snowtrace.io/address/0x8082e58681350876aFe8f52d3Bf8672034A03Db0)
 * - [__View Contract on Optimism Sepolia Blockscout__](https://optimism-sepolia.blockscout.com/address/0xe567b32C10B0dB72d9490eB1B9A409C5ADed192C)
 */
export declare const autoWrapManagerAddress: {
    readonly 1: "0x30aE282CF477E2eF28B14d0125aCEAd57Fe1d7a1";
    readonly 10: "0x1fA76f2Cd0C3fe6c399A80111408d9C42C0CAC23";
    readonly 56: "0x2AcdD61ac1EFFe1535109449c31889bdE8d7f325";
    readonly 100: "0x8082e58681350876aFe8f52d3Bf8672034A03Db0";
    readonly 137: "0x2581c27E7f6D6AF452E63fCe884EDE3EDd716b32";
    readonly 8453: "0x5D0acD0864Ad07ba4E1E0474AE69Da87482e14A9";
    readonly 42161: "0xf01825eAFAe5CD1Dab5593EFAF218efC8968D272";
    readonly 43113: "0x30aE282CF477E2eF28B14d0125aCEAd57Fe1d7a1";
    readonly 43114: "0x8082e58681350876aFe8f52d3Bf8672034A03Db0";
    readonly 11155420: "0xe567b32C10B0dB72d9490eB1B9A409C5ADed192C";
};
/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x30aE282CF477E2eF28B14d0125aCEAd57Fe1d7a1)
 * - [__View Contract on Op Mainnet Optimism Explorer__](https://explorer.optimism.io/address/0x1fA76f2Cd0C3fe6c399A80111408d9C42C0CAC23)
 * - [__View Contract on Bnb Smart Chain Bsc Scan__](https://bscscan.com/address/0x2AcdD61ac1EFFe1535109449c31889bdE8d7f325)
 * - [__View Contract on Gnosis Gnosis Chain Explorer__](https://blockscout.com/xdai/mainnet/address/0x8082e58681350876aFe8f52d3Bf8672034A03Db0)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x2581c27E7f6D6AF452E63fCe884EDE3EDd716b32)
 * - [__View Contract on Base Basescan__](https://basescan.org/address/0x5D0acD0864Ad07ba4E1E0474AE69Da87482e14A9)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xf01825eAFAe5CD1Dab5593EFAF218efC8968D272)
 * - [__View Contract on Avalanche Fuji Snow Trace__](https://testnet.snowtrace.io/address/0x30aE282CF477E2eF28B14d0125aCEAd57Fe1d7a1)
 * - [__View Contract on Avalanche Snow Trace__](https://snowtrace.io/address/0x8082e58681350876aFe8f52d3Bf8672034A03Db0)
 * - [__View Contract on Optimism Sepolia Blockscout__](https://optimism-sepolia.blockscout.com/address/0xe567b32C10B0dB72d9490eB1B9A409C5ADed192C)
 */
export declare const autoWrapManagerConfig: {
    readonly address: {
        readonly 1: "0x30aE282CF477E2eF28B14d0125aCEAd57Fe1d7a1";
        readonly 10: "0x1fA76f2Cd0C3fe6c399A80111408d9C42C0CAC23";
        readonly 56: "0x2AcdD61ac1EFFe1535109449c31889bdE8d7f325";
        readonly 100: "0x8082e58681350876aFe8f52d3Bf8672034A03Db0";
        readonly 137: "0x2581c27E7f6D6AF452E63fCe884EDE3EDd716b32";
        readonly 8453: "0x5D0acD0864Ad07ba4E1E0474AE69Da87482e14A9";
        readonly 42161: "0xf01825eAFAe5CD1Dab5593EFAF218efC8968D272";
        readonly 43113: "0x30aE282CF477E2eF28B14d0125aCEAd57Fe1d7a1";
        readonly 43114: "0x8082e58681350876aFe8f52d3Bf8672034A03Db0";
        readonly 11155420: "0xe567b32C10B0dB72d9490eB1B9A409C5ADed192C";
    };
    readonly abi: readonly [{
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
        readonly inputs: readonly [{
            readonly name: "_cfa";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "_minLower";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }, {
            readonly name: "_minUpper";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }];
    }, {
        readonly type: "error";
        readonly inputs: readonly [{
            readonly name: "limitGiven";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }, {
            readonly name: "minLimit";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }];
        readonly name: "InsufficientLimits";
    }, {
        readonly type: "error";
        readonly inputs: readonly [{
            readonly name: "expirationTimeGiven";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }, {
            readonly name: "timeNow";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
        readonly name: "InvalidExpirationTime";
    }, {
        readonly type: "error";
        readonly inputs: readonly [{
            readonly name: "strategy";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "InvalidStrategy";
    }, {
        readonly type: "error";
        readonly inputs: readonly [{
            readonly name: "caller";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "expectedCaller";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "UnauthorizedCaller";
    }, {
        readonly type: "error";
        readonly inputs: readonly [{
            readonly name: "superToken";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "UnsupportedSuperToken";
    }, {
        readonly type: "error";
        readonly inputs: readonly [{
            readonly name: "index";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
        }];
        readonly name: "WrapNotRequired";
    }, {
        readonly type: "error";
        readonly inputs: readonly [{
            readonly name: "lowerLimit";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }, {
            readonly name: "upperLimit";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }];
        readonly name: "WrongLimits";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "ZeroAddress";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "strategy";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }];
        readonly name: "AddedApprovedStrategy";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "lowerLimit";
            readonly internalType: "uint64";
            readonly type: "uint64";
            readonly indexed: false;
        }, {
            readonly name: "upperLimit";
            readonly internalType: "uint64";
            readonly type: "uint64";
            readonly indexed: false;
        }];
        readonly name: "LimitsChanged";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "previousOwner";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }, {
            readonly name: "newOwner";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }];
        readonly name: "OwnershipTransferred";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "strategy";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }];
        readonly name: "RemovedApprovedStrategy";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "id";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
            readonly indexed: true;
        }, {
            readonly name: "wrapAmount";
            readonly internalType: "uint256";
            readonly type: "uint256";
            readonly indexed: false;
        }];
        readonly name: "WrapExecuted";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "id";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
            readonly indexed: true;
        }, {
            readonly name: "user";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }, {
            readonly name: "superToken";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }, {
            readonly name: "strategy";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: false;
        }, {
            readonly name: "liquidityToken";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: false;
        }, {
            readonly name: "expiry";
            readonly internalType: "uint256";
            readonly type: "uint256";
            readonly indexed: false;
        }, {
            readonly name: "lowerLimit";
            readonly internalType: "uint256";
            readonly type: "uint256";
            readonly indexed: false;
        }, {
            readonly name: "upperLimit";
            readonly internalType: "uint256";
            readonly type: "uint256";
            readonly indexed: false;
        }];
        readonly name: "WrapScheduleCreated";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "id";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
            readonly indexed: true;
        }, {
            readonly name: "user";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }, {
            readonly name: "superToken";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }, {
            readonly name: "strategy";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: false;
        }, {
            readonly name: "liquidityToken";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: false;
        }];
        readonly name: "WrapScheduleDeleted";
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "strategy";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "addApprovedStrategy";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "approvedStrategies";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "cfaV1";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "contract IConstantFlowAgreementV1";
            readonly type: "address";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "user";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "superToken";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "liquidityToken";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "checkWrap";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "index";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
        }];
        readonly name: "checkWrapByIndex";
        readonly outputs: readonly [{
            readonly name: "amount";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "superToken";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "strategy";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "liquidityToken";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "expiry";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }, {
            readonly name: "lowerLimit";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }, {
            readonly name: "upperLimit";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }];
        readonly name: "createWrapSchedule";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "user";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "superToken";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "liquidityToken";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "deleteWrapSchedule";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "index";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
        }];
        readonly name: "deleteWrapScheduleByIndex";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "user";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "superToken";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "liquidityToken";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "executeWrap";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "index";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
        }];
        readonly name: "executeWrapByIndex";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "user";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "superToken";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "liquidityToken";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "getWrapSchedule";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "struct IManager.WrapSchedule";
            readonly type: "tuple";
            readonly components: readonly [{
                readonly name: "user";
                readonly internalType: "address";
                readonly type: "address";
            }, {
                readonly name: "superToken";
                readonly internalType: "contract ISuperToken";
                readonly type: "address";
            }, {
                readonly name: "strategy";
                readonly internalType: "contract IStrategy";
                readonly type: "address";
            }, {
                readonly name: "liquidityToken";
                readonly internalType: "address";
                readonly type: "address";
            }, {
                readonly name: "expiry";
                readonly internalType: "uint64";
                readonly type: "uint64";
            }, {
                readonly name: "lowerLimit";
                readonly internalType: "uint64";
                readonly type: "uint64";
            }, {
                readonly name: "upperLimit";
                readonly internalType: "uint64";
                readonly type: "uint64";
            }];
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "index";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
        }];
        readonly name: "getWrapScheduleByIndex";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "struct IManager.WrapSchedule";
            readonly type: "tuple";
            readonly components: readonly [{
                readonly name: "user";
                readonly internalType: "address";
                readonly type: "address";
            }, {
                readonly name: "superToken";
                readonly internalType: "contract ISuperToken";
                readonly type: "address";
            }, {
                readonly name: "strategy";
                readonly internalType: "contract IStrategy";
                readonly type: "address";
            }, {
                readonly name: "liquidityToken";
                readonly internalType: "address";
                readonly type: "address";
            }, {
                readonly name: "expiry";
                readonly internalType: "uint64";
                readonly type: "uint64";
            }, {
                readonly name: "lowerLimit";
                readonly internalType: "uint64";
                readonly type: "uint64";
            }, {
                readonly name: "upperLimit";
                readonly internalType: "uint64";
                readonly type: "uint64";
            }];
        }];
    }, {
        readonly stateMutability: "pure";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "user";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "superToken";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "liquidityToken";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "getWrapScheduleIndex";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "minLower";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "minUpper";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "address";
            readonly type: "address";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "strategy";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "removeApprovedStrategy";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "lowerLimit";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }, {
            readonly name: "upperLimit";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }];
        readonly name: "setLimits";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "newOwner";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
    }];
};
/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x1D65c6d3AD39d454Ea8F682c49aE7744706eA96d)
 * - [__View Contract on Op Mainnet Optimism Explorer__](https://explorer.optimism.io/address/0x0Cf060a501c0040e9CCC708eFE94079F501c6Bb4)
 * - [__View Contract on Bnb Smart Chain Bsc Scan__](https://bscscan.com/address/0x9e308cb079ae130790F604b1030cDf386670f199)
 * - [__View Contract on Gnosis Gnosis Chain Explorer__](https://blockscout.com/xdai/mainnet/address/0x51FBAbD31A615E14b1bC12E9d887f60997264a4E)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4afa36BAd8c76976Dc77a21c9Ad711EF720eE4b)
 * - [__View Contract on Base Basescan__](https://basescan.org/address/0xB29005319B0caB24cF6D4d24e8420E54BB29Cb0d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x342076aA957B0ec8bC1d3893af719b288eA31e61)
 * - [__View Contract on Avalanche Fuji Snow Trace__](https://testnet.snowtrace.io/address/0x1D65c6d3AD39d454Ea8F682c49aE7744706eA96d)
 * - [__View Contract on Avalanche Snow Trace__](https://snowtrace.io/address/0x51FBAbD31A615E14b1bC12E9d887f60997264a4E)
 * - [__View Contract on Optimism Sepolia Blockscout__](https://optimism-sepolia.blockscout.com/address/0xf232f1fd34CE12e24F4391865c2D6E374D2C34d9)
 */
export declare const autoWrapStrategyABI: readonly [{
    readonly stateMutability: "nonpayable";
    readonly type: "constructor";
    readonly inputs: readonly [{
        readonly name: "_manager";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "caller";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "expectedCaller";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "UnauthorizedCaller";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "superToken";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "UnsupportedSuperToken";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "ZeroAddress";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "receiver";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "token";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "EmergencyWithdrawInitiated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "oldManager";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "manager";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "ManagerChanged";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "previousOwner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "newOwner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "OwnershipTransferred";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "user";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "superToken";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "superTokenAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "Wrapped";
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newManager";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "changeManager";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "emergencyWithdraw";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "superToken";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }];
    readonly name: "isSupportedSuperToken";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "manager";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "owner";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "renounceOwnership";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newOwner";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "transferOwnership";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "user";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }, {
        readonly name: "superTokenAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "wrap";
    readonly outputs: readonly [];
}];
/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x1D65c6d3AD39d454Ea8F682c49aE7744706eA96d)
 * - [__View Contract on Op Mainnet Optimism Explorer__](https://explorer.optimism.io/address/0x0Cf060a501c0040e9CCC708eFE94079F501c6Bb4)
 * - [__View Contract on Bnb Smart Chain Bsc Scan__](https://bscscan.com/address/0x9e308cb079ae130790F604b1030cDf386670f199)
 * - [__View Contract on Gnosis Gnosis Chain Explorer__](https://blockscout.com/xdai/mainnet/address/0x51FBAbD31A615E14b1bC12E9d887f60997264a4E)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4afa36BAd8c76976Dc77a21c9Ad711EF720eE4b)
 * - [__View Contract on Base Basescan__](https://basescan.org/address/0xB29005319B0caB24cF6D4d24e8420E54BB29Cb0d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x342076aA957B0ec8bC1d3893af719b288eA31e61)
 * - [__View Contract on Avalanche Fuji Snow Trace__](https://testnet.snowtrace.io/address/0x1D65c6d3AD39d454Ea8F682c49aE7744706eA96d)
 * - [__View Contract on Avalanche Snow Trace__](https://snowtrace.io/address/0x51FBAbD31A615E14b1bC12E9d887f60997264a4E)
 * - [__View Contract on Optimism Sepolia Blockscout__](https://optimism-sepolia.blockscout.com/address/0xf232f1fd34CE12e24F4391865c2D6E374D2C34d9)
 */
export declare const autoWrapStrategyAddress: {
    readonly 1: "0x1D65c6d3AD39d454Ea8F682c49aE7744706eA96d";
    readonly 10: "0x0Cf060a501c0040e9CCC708eFE94079F501c6Bb4";
    readonly 56: "0x9e308cb079ae130790F604b1030cDf386670f199";
    readonly 100: "0x51FBAbD31A615E14b1bC12E9d887f60997264a4E";
    readonly 137: "0xb4afa36BAd8c76976Dc77a21c9Ad711EF720eE4b";
    readonly 8453: "0xB29005319B0caB24cF6D4d24e8420E54BB29Cb0d";
    readonly 42161: "0x342076aA957B0ec8bC1d3893af719b288eA31e61";
    readonly 43113: "0x1D65c6d3AD39d454Ea8F682c49aE7744706eA96d";
    readonly 43114: "0x51FBAbD31A615E14b1bC12E9d887f60997264a4E";
    readonly 11155420: "0xf232f1fd34CE12e24F4391865c2D6E374D2C34d9";
};
/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x1D65c6d3AD39d454Ea8F682c49aE7744706eA96d)
 * - [__View Contract on Op Mainnet Optimism Explorer__](https://explorer.optimism.io/address/0x0Cf060a501c0040e9CCC708eFE94079F501c6Bb4)
 * - [__View Contract on Bnb Smart Chain Bsc Scan__](https://bscscan.com/address/0x9e308cb079ae130790F604b1030cDf386670f199)
 * - [__View Contract on Gnosis Gnosis Chain Explorer__](https://blockscout.com/xdai/mainnet/address/0x51FBAbD31A615E14b1bC12E9d887f60997264a4E)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4afa36BAd8c76976Dc77a21c9Ad711EF720eE4b)
 * - [__View Contract on Base Basescan__](https://basescan.org/address/0xB29005319B0caB24cF6D4d24e8420E54BB29Cb0d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x342076aA957B0ec8bC1d3893af719b288eA31e61)
 * - [__View Contract on Avalanche Fuji Snow Trace__](https://testnet.snowtrace.io/address/0x1D65c6d3AD39d454Ea8F682c49aE7744706eA96d)
 * - [__View Contract on Avalanche Snow Trace__](https://snowtrace.io/address/0x51FBAbD31A615E14b1bC12E9d887f60997264a4E)
 * - [__View Contract on Optimism Sepolia Blockscout__](https://optimism-sepolia.blockscout.com/address/0xf232f1fd34CE12e24F4391865c2D6E374D2C34d9)
 */
export declare const autoWrapStrategyConfig: {
    readonly address: {
        readonly 1: "0x1D65c6d3AD39d454Ea8F682c49aE7744706eA96d";
        readonly 10: "0x0Cf060a501c0040e9CCC708eFE94079F501c6Bb4";
        readonly 56: "0x9e308cb079ae130790F604b1030cDf386670f199";
        readonly 100: "0x51FBAbD31A615E14b1bC12E9d887f60997264a4E";
        readonly 137: "0xb4afa36BAd8c76976Dc77a21c9Ad711EF720eE4b";
        readonly 8453: "0xB29005319B0caB24cF6D4d24e8420E54BB29Cb0d";
        readonly 42161: "0x342076aA957B0ec8bC1d3893af719b288eA31e61";
        readonly 43113: "0x1D65c6d3AD39d454Ea8F682c49aE7744706eA96d";
        readonly 43114: "0x51FBAbD31A615E14b1bC12E9d887f60997264a4E";
        readonly 11155420: "0xf232f1fd34CE12e24F4391865c2D6E374D2C34d9";
    };
    readonly abi: readonly [{
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
        readonly inputs: readonly [{
            readonly name: "_manager";
            readonly internalType: "address";
            readonly type: "address";
        }];
    }, {
        readonly type: "error";
        readonly inputs: readonly [{
            readonly name: "caller";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "expectedCaller";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "UnauthorizedCaller";
    }, {
        readonly type: "error";
        readonly inputs: readonly [{
            readonly name: "superToken";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "UnsupportedSuperToken";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "ZeroAddress";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "receiver";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }, {
            readonly name: "token";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }, {
            readonly name: "amount";
            readonly internalType: "uint256";
            readonly type: "uint256";
            readonly indexed: false;
        }];
        readonly name: "EmergencyWithdrawInitiated";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "oldManager";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }, {
            readonly name: "manager";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }];
        readonly name: "ManagerChanged";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "previousOwner";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }, {
            readonly name: "newOwner";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }];
        readonly name: "OwnershipTransferred";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "user";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }, {
            readonly name: "superToken";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }, {
            readonly name: "superTokenAmount";
            readonly internalType: "uint256";
            readonly type: "uint256";
            readonly indexed: false;
        }];
        readonly name: "Wrapped";
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "newManager";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "changeManager";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "emergencyWithdraw";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "superToken";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }];
        readonly name: "isSupportedSuperToken";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "manager";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "address";
            readonly type: "address";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "address";
            readonly type: "address";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "newOwner";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "user";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "superToken";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "superTokenAmount";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
        readonly name: "wrap";
        readonly outputs: readonly [];
    }];
};
/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Op Mainnet Optimism Explorer__](https://explorer.optimism.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Bnb Smart Chain Bsc Scan__](https://bscscan.com/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Gnosis Gnosis Chain Explorer__](https://blockscout.com/xdai/mainnet/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Base Basescan__](https://basescan.org/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Celo Celo Explorer__](https://explorer.celo.org/mainnet/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Avalanche Fuji Snow Trace__](https://testnet.snowtrace.io/address/0x2CDd45c5182602a36d391F7F16DD9f8386C3bD8D)
 * - [__View Contract on Avalanche Snow Trace__](https://snowtrace.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Base Sepolia Blockscout__](https://base-sepolia.blockscout.com/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Scroll Sepolia Blockscout__](https://sepolia-blockscout.scroll.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Scroll Scrollscan__](https://scrollscan.com/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Optimism Sepolia Blockscout__](https://optimism-sepolia.blockscout.com/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 */
export declare const cfAv1ForwarderABI: readonly [{
    readonly stateMutability: "nonpayable";
    readonly type: "constructor";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }];
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_FWD_INVALID_FLOW_RATE";
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }, {
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "receiver";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "flowrate";
        readonly internalType: "int96";
        readonly type: "int96";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "createFlow";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }, {
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "receiver";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "deleteFlow";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getAccountFlowInfo";
    readonly outputs: readonly [{
        readonly name: "lastUpdated";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "flowrate";
        readonly internalType: "int96";
        readonly type: "int96";
    }, {
        readonly name: "deposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "owedDeposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getAccountFlowrate";
    readonly outputs: readonly [{
        readonly name: "flowrate";
        readonly internalType: "int96";
        readonly type: "int96";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }, {
        readonly name: "flowrate";
        readonly internalType: "int96";
        readonly type: "int96";
    }];
    readonly name: "getBufferAmountByFlowrate";
    readonly outputs: readonly [{
        readonly name: "bufferAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }, {
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "receiver";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getFlowInfo";
    readonly outputs: readonly [{
        readonly name: "lastUpdated";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "flowrate";
        readonly internalType: "int96";
        readonly type: "int96";
    }, {
        readonly name: "deposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "owedDeposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }, {
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "flowOperator";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getFlowOperatorPermissions";
    readonly outputs: readonly [{
        readonly name: "permissions";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }, {
        readonly name: "flowrateAllowance";
        readonly internalType: "int96";
        readonly type: "int96";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }, {
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "receiver";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getFlowrate";
    readonly outputs: readonly [{
        readonly name: "flowrate";
        readonly internalType: "int96";
        readonly type: "int96";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }, {
        readonly name: "flowOperator";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "grantPermissions";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }, {
        readonly name: "flowOperator";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "revokePermissions";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }, {
        readonly name: "receiver";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "flowrate";
        readonly internalType: "int96";
        readonly type: "int96";
    }];
    readonly name: "setFlowrate";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }, {
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "receiver";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "flowrate";
        readonly internalType: "int96";
        readonly type: "int96";
    }];
    readonly name: "setFlowrateFrom";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }, {
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "receiver";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "flowrate";
        readonly internalType: "int96";
        readonly type: "int96";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "updateFlow";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }, {
        readonly name: "flowOperator";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "permissions";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }, {
        readonly name: "flowrateAllowance";
        readonly internalType: "int96";
        readonly type: "int96";
    }];
    readonly name: "updateFlowOperatorPermissions";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}];
/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Op Mainnet Optimism Explorer__](https://explorer.optimism.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Bnb Smart Chain Bsc Scan__](https://bscscan.com/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Gnosis Gnosis Chain Explorer__](https://blockscout.com/xdai/mainnet/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Base Basescan__](https://basescan.org/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Celo Celo Explorer__](https://explorer.celo.org/mainnet/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Avalanche Fuji Snow Trace__](https://testnet.snowtrace.io/address/0x2CDd45c5182602a36d391F7F16DD9f8386C3bD8D)
 * - [__View Contract on Avalanche Snow Trace__](https://snowtrace.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Base Sepolia Blockscout__](https://base-sepolia.blockscout.com/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Scroll Sepolia Blockscout__](https://sepolia-blockscout.scroll.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Scroll Scrollscan__](https://scrollscan.com/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Optimism Sepolia Blockscout__](https://optimism-sepolia.blockscout.com/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 */
export declare const cfAv1ForwarderAddress: {
    readonly 1: "0xcfA132E353cB4E398080B9700609bb008eceB125";
    readonly 10: "0xcfA132E353cB4E398080B9700609bb008eceB125";
    readonly 56: "0xcfA132E353cB4E398080B9700609bb008eceB125";
    readonly 100: "0xcfA132E353cB4E398080B9700609bb008eceB125";
    readonly 137: "0xcfA132E353cB4E398080B9700609bb008eceB125";
    readonly 8453: "0xcfA132E353cB4E398080B9700609bb008eceB125";
    readonly 42161: "0xcfA132E353cB4E398080B9700609bb008eceB125";
    readonly 42220: "0xcfA132E353cB4E398080B9700609bb008eceB125";
    readonly 43113: "0x2CDd45c5182602a36d391F7F16DD9f8386C3bD8D";
    readonly 43114: "0xcfA132E353cB4E398080B9700609bb008eceB125";
    readonly 84532: "0xcfA132E353cB4E398080B9700609bb008eceB125";
    readonly 534351: "0xcfA132E353cB4E398080B9700609bb008eceB125";
    readonly 534352: "0xcfA132E353cB4E398080B9700609bb008eceB125";
    readonly 11155111: "0xcfA132E353cB4E398080B9700609bb008eceB125";
    readonly 11155420: "0xcfA132E353cB4E398080B9700609bb008eceB125";
    readonly 666666666: "0xcfA132E353cB4E398080B9700609bb008eceB125";
};
/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Op Mainnet Optimism Explorer__](https://explorer.optimism.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Bnb Smart Chain Bsc Scan__](https://bscscan.com/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Gnosis Gnosis Chain Explorer__](https://blockscout.com/xdai/mainnet/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Base Basescan__](https://basescan.org/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Celo Celo Explorer__](https://explorer.celo.org/mainnet/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Avalanche Fuji Snow Trace__](https://testnet.snowtrace.io/address/0x2CDd45c5182602a36d391F7F16DD9f8386C3bD8D)
 * - [__View Contract on Avalanche Snow Trace__](https://snowtrace.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Base Sepolia Blockscout__](https://base-sepolia.blockscout.com/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Scroll Sepolia Blockscout__](https://sepolia-blockscout.scroll.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Scroll Scrollscan__](https://scrollscan.com/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Optimism Sepolia Blockscout__](https://optimism-sepolia.blockscout.com/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 */
export declare const cfAv1ForwarderConfig: {
    readonly address: {
        readonly 1: "0xcfA132E353cB4E398080B9700609bb008eceB125";
        readonly 10: "0xcfA132E353cB4E398080B9700609bb008eceB125";
        readonly 56: "0xcfA132E353cB4E398080B9700609bb008eceB125";
        readonly 100: "0xcfA132E353cB4E398080B9700609bb008eceB125";
        readonly 137: "0xcfA132E353cB4E398080B9700609bb008eceB125";
        readonly 8453: "0xcfA132E353cB4E398080B9700609bb008eceB125";
        readonly 42161: "0xcfA132E353cB4E398080B9700609bb008eceB125";
        readonly 42220: "0xcfA132E353cB4E398080B9700609bb008eceB125";
        readonly 43113: "0x2CDd45c5182602a36d391F7F16DD9f8386C3bD8D";
        readonly 43114: "0xcfA132E353cB4E398080B9700609bb008eceB125";
        readonly 84532: "0xcfA132E353cB4E398080B9700609bb008eceB125";
        readonly 534351: "0xcfA132E353cB4E398080B9700609bb008eceB125";
        readonly 534352: "0xcfA132E353cB4E398080B9700609bb008eceB125";
        readonly 11155111: "0xcfA132E353cB4E398080B9700609bb008eceB125";
        readonly 11155420: "0xcfA132E353cB4E398080B9700609bb008eceB125";
        readonly 666666666: "0xcfA132E353cB4E398080B9700609bb008eceB125";
    };
    readonly abi: readonly [{
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
        readonly inputs: readonly [{
            readonly name: "host";
            readonly internalType: "contract ISuperfluid";
            readonly type: "address";
        }];
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "CFA_FWD_INVALID_FLOW_RATE";
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "sender";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "receiver";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "flowrate";
            readonly internalType: "int96";
            readonly type: "int96";
        }, {
            readonly name: "userData";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
        readonly name: "createFlow";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "sender";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "receiver";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "userData";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
        readonly name: "deleteFlow";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "account";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "getAccountFlowInfo";
        readonly outputs: readonly [{
            readonly name: "lastUpdated";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }, {
            readonly name: "flowrate";
            readonly internalType: "int96";
            readonly type: "int96";
        }, {
            readonly name: "deposit";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }, {
            readonly name: "owedDeposit";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "account";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "getAccountFlowrate";
        readonly outputs: readonly [{
            readonly name: "flowrate";
            readonly internalType: "int96";
            readonly type: "int96";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "flowrate";
            readonly internalType: "int96";
            readonly type: "int96";
        }];
        readonly name: "getBufferAmountByFlowrate";
        readonly outputs: readonly [{
            readonly name: "bufferAmount";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "sender";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "receiver";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "getFlowInfo";
        readonly outputs: readonly [{
            readonly name: "lastUpdated";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }, {
            readonly name: "flowrate";
            readonly internalType: "int96";
            readonly type: "int96";
        }, {
            readonly name: "deposit";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }, {
            readonly name: "owedDeposit";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "sender";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "flowOperator";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "getFlowOperatorPermissions";
        readonly outputs: readonly [{
            readonly name: "permissions";
            readonly internalType: "uint8";
            readonly type: "uint8";
        }, {
            readonly name: "flowrateAllowance";
            readonly internalType: "int96";
            readonly type: "int96";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "sender";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "receiver";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "getFlowrate";
        readonly outputs: readonly [{
            readonly name: "flowrate";
            readonly internalType: "int96";
            readonly type: "int96";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "flowOperator";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "grantPermissions";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "flowOperator";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "revokePermissions";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "receiver";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "flowrate";
            readonly internalType: "int96";
            readonly type: "int96";
        }];
        readonly name: "setFlowrate";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "sender";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "receiver";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "flowrate";
            readonly internalType: "int96";
            readonly type: "int96";
        }];
        readonly name: "setFlowrateFrom";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "sender";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "receiver";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "flowrate";
            readonly internalType: "int96";
            readonly type: "int96";
        }, {
            readonly name: "userData";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
        readonly name: "updateFlow";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "flowOperator";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "permissions";
            readonly internalType: "uint8";
            readonly type: "uint8";
        }, {
            readonly name: "flowrateAllowance";
            readonly internalType: "int96";
            readonly type: "int96";
        }];
        readonly name: "updateFlowOperatorPermissions";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }];
};
export declare const erc20ABI: readonly [{
    readonly type: "event";
    readonly inputs: readonly [{
        readonly name: "owner";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "spender";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "value";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "Approval";
}, {
    readonly type: "event";
    readonly inputs: readonly [{
        readonly name: "from";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "to";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "value";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "Transfer";
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "owner";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly type: "address";
    }];
    readonly name: "allowance";
    readonly outputs: readonly [{
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "approve";
    readonly outputs: readonly [{
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "balanceOf";
    readonly outputs: readonly [{
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "decimals";
    readonly outputs: readonly [{
        readonly type: "uint8";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "name";
    readonly outputs: readonly [{
        readonly type: "string";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "symbol";
    readonly outputs: readonly [{
        readonly type: "string";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "totalSupply";
    readonly outputs: readonly [{
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "recipient";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "transfer";
    readonly outputs: readonly [{
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly name: "recipient";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "transferFrom";
    readonly outputs: readonly [{
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly type: "address";
    }, {
        readonly name: "addedValue";
        readonly type: "uint256";
    }];
    readonly name: "increaseAllowance";
    readonly outputs: readonly [{
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly type: "address";
    }, {
        readonly name: "subtractedValue";
        readonly type: "uint256";
    }];
    readonly name: "decreaseAllowance";
    readonly outputs: readonly [{
        readonly type: "bool";
    }];
}];
export declare const erc721ABI: readonly [{
    readonly type: "event";
    readonly inputs: readonly [{
        readonly name: "owner";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "spender";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "tokenId";
        readonly type: "uint256";
        readonly indexed: true;
    }];
    readonly name: "Approval";
}, {
    readonly type: "event";
    readonly inputs: readonly [{
        readonly name: "owner";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "operator";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "approved";
        readonly type: "bool";
        readonly indexed: false;
    }];
    readonly name: "ApprovalForAll";
}, {
    readonly type: "event";
    readonly inputs: readonly [{
        readonly name: "from";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "to";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "tokenId";
        readonly type: "uint256";
        readonly indexed: true;
    }];
    readonly name: "Transfer";
}, {
    readonly stateMutability: "payable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly type: "address";
    }, {
        readonly name: "tokenId";
        readonly type: "uint256";
    }];
    readonly name: "approve";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "balanceOf";
    readonly outputs: readonly [{
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "tokenId";
        readonly type: "uint256";
    }];
    readonly name: "getApproved";
    readonly outputs: readonly [{
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "owner";
        readonly type: "address";
    }, {
        readonly name: "operator";
        readonly type: "address";
    }];
    readonly name: "isApprovedForAll";
    readonly outputs: readonly [{
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "name";
    readonly outputs: readonly [{
        readonly type: "string";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "tokenId";
        readonly type: "uint256";
    }];
    readonly name: "ownerOf";
    readonly outputs: readonly [{
        readonly name: "owner";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "payable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly name: "tokenId";
        readonly type: "uint256";
    }];
    readonly name: "safeTransferFrom";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly name: "id";
        readonly type: "uint256";
    }, {
        readonly name: "data";
        readonly type: "bytes";
    }];
    readonly name: "safeTransferFrom";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly type: "address";
    }, {
        readonly name: "approved";
        readonly type: "bool";
    }];
    readonly name: "setApprovalForAll";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "symbol";
    readonly outputs: readonly [{
        readonly type: "string";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "index";
        readonly type: "uint256";
    }];
    readonly name: "tokenByIndex";
    readonly outputs: readonly [{
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "owner";
        readonly type: "address";
    }, {
        readonly name: "index";
        readonly type: "uint256";
    }];
    readonly name: "tokenByIndex";
    readonly outputs: readonly [{
        readonly name: "tokenId";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "tokenId";
        readonly type: "uint256";
    }];
    readonly name: "tokenURI";
    readonly outputs: readonly [{
        readonly type: "string";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "totalSupply";
    readonly outputs: readonly [{
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "payable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly name: "recipient";
        readonly type: "address";
    }, {
        readonly name: "tokenId";
        readonly type: "uint256";
    }];
    readonly name: "transferFrom";
    readonly outputs: readonly [];
}];
export declare const errorsABI: readonly [{
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "AGREEMENT_BASE_ONLY_HOST";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "_code";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "APP_RULE";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_ACL_FLOW_RATE_ALLOWANCE_EXCEEDED";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_ACL_NO_NEGATIVE_ALLOWANCE";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_ACL_NO_SENDER_CREATE";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_ACL_NO_SENDER_FLOW_OPERATOR";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_ACL_NO_SENDER_UPDATE";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_ACL_OPERATOR_NO_CREATE_PERMISSIONS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_ACL_OPERATOR_NO_DELETE_PERMISSIONS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_ACL_OPERATOR_NO_UPDATE_PERMISSIONS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_ACL_UNCLEAN_PERMISSIONS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_DEPOSIT_TOO_BIG";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_FLOW_ALREADY_EXISTS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_FLOW_DOES_NOT_EXIST";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_FLOW_RATE_TOO_BIG";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_HOOK_OUT_OF_GAS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_INSUFFICIENT_BALANCE";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_INVALID_FLOW_RATE";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_NON_CRITICAL_SENDER";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_NO_SELF_FLOW";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_ZERO_ADDRESS_RECEIVER";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CFA_ZERO_ADDRESS_SENDER";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_AGREEMENT_ALREADY_EXISTS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_BURN_INSUFFICIENT_BALANCE";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_ONLY_HOST";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_ONLY_LISTED_AGREEMENT";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_NO_UNDERLYING_TOKEN";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_ONLY_ADMIN";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_ONLY_GOV_OWNER";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_ONLY_SELF";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS";
}];
/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4E583d9390082B65Bef884b629DFA426114CED6d)
 * - [__View Contract on Op Mainnet Optimism Explorer__](https://explorer.optimism.io/address/0x567c4B141ED61923967cA25Ef4906C8781069a10)
 * - [__View Contract on Bnb Smart Chain Bsc Scan__](https://bscscan.com/address/0xd1e2cFb6441680002Eb7A44223160aB9B67d7E6E)
 * - [__View Contract on Gnosis Gnosis Chain Explorer__](https://blockscout.com/xdai/mainnet/address/0x2dFe937cD98Ab92e59cF3139138f18c823a4efE7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x3E14dC1b13c488a8d5D310918780c983bD5982E7)
 * - [__View Contract on Base Basescan__](https://basescan.org/address/0x4C073B3baB6d8826b8C5b229f3cfdC1eC6E47E74)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xCf8Acb4eF033efF16E8080aed4c7D5B9285D2192)
 * - [__View Contract on Celo Celo Explorer__](https://explorer.celo.org/mainnet/address/0xA4Ff07cF81C02CFD356184879D953970cA957585)
 * - [__View Contract on Avalanche Fuji Snow Trace__](https://testnet.snowtrace.io/address/0x85Fe79b998509B77BF10A8BD4001D58475D29386)
 * - [__View Contract on Avalanche Snow Trace__](https://snowtrace.io/address/0x60377C7016E4cdB03C87EF474896C11cB560752C)
 * - [__View Contract on Base Sepolia Blockscout__](https://base-sepolia.blockscout.com/address/0x109412E3C84f0539b43d39dB691B08c90f58dC7c)
 * - [__View Contract on Scroll Sepolia Blockscout__](https://sepolia-blockscout.scroll.io/address/0x42b05a6016B9eED232E13fd56a8F0725693DBF8e)
 * - [__View Contract on Scroll Scrollscan__](https://scrollscan.com/address/0x0F86a21F6216c061B222c224e315d9FC34520bb7)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x109412E3C84f0539b43d39dB691B08c90f58dC7c)
 * - [__View Contract on Optimism Sepolia Blockscout__](https://optimism-sepolia.blockscout.com/address/0xd399e2Fb5f4cf3722a11F65b88FAB6B2B8621005)
 */
export declare const hostABI: readonly [{
    readonly stateMutability: "nonpayable";
    readonly type: "constructor";
    readonly inputs: readonly [{
        readonly name: "nonUpgradable";
        readonly internalType: "bool";
        readonly type: "bool";
    }, {
        readonly name: "appWhiteListingEnabled";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "_code";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "APP_RULE";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_AGREEMENT_ALREADY_REGISTERED";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_AGREEMENT_CALLBACK_IS_NOT_ACTION";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_AGREEMENT_IS_NOT_REGISTERED";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_CALL_AGREEMENT_WITH_CTX_FROM_WRONG_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_CALL_APP_ACTION_WITH_CTX_FROM_WRONG_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_CANNOT_DOWNGRADE_TO_NON_UPGRADEABLE";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_INVALID_CONFIG_WORD";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_MAX_256_AGREEMENTS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_MUST_BE_CONTRACT";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_NEED_MORE_GAS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_NON_UPGRADEABLE";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_NON_ZERO_LENGTH_PLACEHOLDER_CTX";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_NOT_A_SUPER_APP";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_NO_APP_REGISTRATION_PERMISSION";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_ONLY_GOVERNANCE";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_ONLY_LISTED_AGREEMENT";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_RECEIVER_IS_NOT_SUPER_APP";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_SENDER_IS_NOT_SUPER_APP";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_SOURCE_APP_NEEDS_HIGHER_APP_LEVEL";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_SUPER_APP_ALREADY_REGISTERED";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_SUPER_APP_IS_JAILED";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "HOST_UNKNOWN_BATCH_CALL_OPERATION_TYPE";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementType";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "code";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }];
    readonly name: "AgreementClassRegistered";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementType";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "code";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }];
    readonly name: "AgreementClassUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "app";
        readonly internalType: "contract ISuperApp";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "AppRegistered";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "uuid";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "codeAddress";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }];
    readonly name: "CodeUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "oldGov";
        readonly internalType: "contract ISuperfluidGovernance";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "newGov";
        readonly internalType: "contract ISuperfluidGovernance";
        readonly type: "address";
        readonly indexed: false;
    }];
    readonly name: "GovernanceReplaced";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "version";
        readonly internalType: "uint8";
        readonly type: "uint8";
        readonly indexed: false;
    }];
    readonly name: "Initialized";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "app";
        readonly internalType: "contract ISuperApp";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "reason";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "Jail";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "beaconProxy";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "newBeaconLogic";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }];
    readonly name: "PoolBeaconLogicUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "newFactory";
        readonly internalType: "contract ISuperTokenFactory";
        readonly type: "address";
        readonly indexed: false;
    }];
    readonly name: "SuperTokenFactoryUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "code";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }];
    readonly name: "SuperTokenLogicUpdated";
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "APP_WHITE_LISTING_ENABLED";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "CALLBACK_GAS_LIMIT";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint64";
        readonly type: "uint64";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "MAX_APP_CALLBACK_LEVEL";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "MAX_NUM_AGREEMENTS";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint32";
        readonly type: "uint32";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "NON_UPGRADABLE_DEPLOYMENT";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "castrate";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getCodeAddress";
    readonly outputs: readonly [{
        readonly name: "codeAddress";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "gov";
        readonly internalType: "contract ISuperfluidGovernance";
        readonly type: "address";
    }];
    readonly name: "initialize";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "pure";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "proxiableUUID";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newAddress";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "updateCode";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getNow";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getGovernance";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "contract ISuperfluidGovernance";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newGov";
        readonly internalType: "contract ISuperfluidGovernance";
        readonly type: "address";
    }];
    readonly name: "replaceGovernance";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "agreementClassLogic";
        readonly internalType: "contract ISuperAgreement";
        readonly type: "address";
    }];
    readonly name: "registerAgreementClass";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "agreementClassLogic";
        readonly internalType: "contract ISuperAgreement";
        readonly type: "address";
    }];
    readonly name: "updateAgreementClass";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "agreementType";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "isAgreementTypeListed";
    readonly outputs: readonly [{
        readonly name: "yes";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "contract ISuperAgreement";
        readonly type: "address";
    }];
    readonly name: "isAgreementClassListed";
    readonly outputs: readonly [{
        readonly name: "yes";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "agreementType";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "getAgreementClass";
    readonly outputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "contract ISuperAgreement";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "bitmap";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "mapAgreementClasses";
    readonly outputs: readonly [{
        readonly name: "agreementClasses";
        readonly internalType: "contract ISuperAgreement[]";
        readonly type: "address[]";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "bitmap";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "agreementType";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "addToAgreementClassesBitmap";
    readonly outputs: readonly [{
        readonly name: "newBitmap";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "bitmap";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "agreementType";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "removeFromAgreementClassesBitmap";
    readonly outputs: readonly [{
        readonly name: "newBitmap";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getSuperTokenFactory";
    readonly outputs: readonly [{
        readonly name: "factory";
        readonly internalType: "contract ISuperTokenFactory";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getSuperTokenFactoryLogic";
    readonly outputs: readonly [{
        readonly name: "logic";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newFactory";
        readonly internalType: "contract ISuperTokenFactory";
        readonly type: "address";
    }];
    readonly name: "updateSuperTokenFactory";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }, {
        readonly name: "newLogicOverride";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "updateSuperTokenLogic";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }, {
        readonly name: "newAdmin";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "changeSuperTokenAdmin";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newLogic";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "updatePoolBeaconLogic";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "configWord";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "registerApp";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "app";
        readonly internalType: "contract ISuperApp";
        readonly type: "address";
    }, {
        readonly name: "configWord";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "registerApp";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "configWord";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "registrationKey";
        readonly internalType: "string";
        readonly type: "string";
    }];
    readonly name: "registerAppWithKey";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "app";
        readonly internalType: "contract ISuperApp";
        readonly type: "address";
    }, {
        readonly name: "configWord";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "registerAppByFactory";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "app";
        readonly internalType: "contract ISuperApp";
        readonly type: "address";
    }];
    readonly name: "isApp";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "appAddr";
        readonly internalType: "contract ISuperApp";
        readonly type: "address";
    }];
    readonly name: "getAppCallbackLevel";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "app";
        readonly internalType: "contract ISuperApp";
        readonly type: "address";
    }];
    readonly name: "getAppManifest";
    readonly outputs: readonly [{
        readonly name: "isSuperApp";
        readonly internalType: "bool";
        readonly type: "bool";
    }, {
        readonly name: "isJailed";
        readonly internalType: "bool";
        readonly type: "bool";
    }, {
        readonly name: "noopMask";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "app";
        readonly internalType: "contract ISuperApp";
        readonly type: "address";
    }];
    readonly name: "isAppJailed";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "targetApp";
        readonly internalType: "contract ISuperApp";
        readonly type: "address";
    }];
    readonly name: "allowCompositeApp";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "app";
        readonly internalType: "contract ISuperApp";
        readonly type: "address";
    }, {
        readonly name: "targetApp";
        readonly internalType: "contract ISuperApp";
        readonly type: "address";
    }];
    readonly name: "isCompositeAppAllowed";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "app";
        readonly internalType: "contract ISuperApp";
        readonly type: "address";
    }, {
        readonly name: "callData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "isTermination";
        readonly internalType: "bool";
        readonly type: "bool";
    }, {
        readonly name: "ctx";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "callAppBeforeCallback";
    readonly outputs: readonly [{
        readonly name: "cbdata";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "app";
        readonly internalType: "contract ISuperApp";
        readonly type: "address";
    }, {
        readonly name: "callData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "isTermination";
        readonly internalType: "bool";
        readonly type: "bool";
    }, {
        readonly name: "ctx";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "callAppAfterCallback";
    readonly outputs: readonly [{
        readonly name: "newCtx";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "ctx";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "app";
        readonly internalType: "contract ISuperApp";
        readonly type: "address";
    }, {
        readonly name: "appCreditGranted";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "appCreditUsed";
        readonly internalType: "int256";
        readonly type: "int256";
    }, {
        readonly name: "appCreditToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
    }];
    readonly name: "appCallbackPush";
    readonly outputs: readonly [{
        readonly name: "appCtx";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "ctx";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "appCreditUsedDelta";
        readonly internalType: "int256";
        readonly type: "int256";
    }];
    readonly name: "appCallbackPop";
    readonly outputs: readonly [{
        readonly name: "newCtx";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "ctx";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "appCreditUsedMore";
        readonly internalType: "int256";
        readonly type: "int256";
    }];
    readonly name: "ctxUseCredit";
    readonly outputs: readonly [{
        readonly name: "newCtx";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "ctx";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "app";
        readonly internalType: "contract ISuperApp";
        readonly type: "address";
    }, {
        readonly name: "reason";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "jailApp";
    readonly outputs: readonly [{
        readonly name: "newCtx";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "contract ISuperAgreement";
        readonly type: "address";
    }, {
        readonly name: "callData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "callAgreement";
    readonly outputs: readonly [{
        readonly name: "returnedData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "app";
        readonly internalType: "contract ISuperApp";
        readonly type: "address";
    }, {
        readonly name: "callData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "callAppAction";
    readonly outputs: readonly [{
        readonly name: "returnedData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "contract ISuperAgreement";
        readonly type: "address";
    }, {
        readonly name: "callData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "ctx";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "callAgreementWithContext";
    readonly outputs: readonly [{
        readonly name: "newCtx";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "returnedData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "app";
        readonly internalType: "contract ISuperApp";
        readonly type: "address";
    }, {
        readonly name: "callData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "ctx";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "callAppActionWithContext";
    readonly outputs: readonly [{
        readonly name: "newCtx";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
}, {
    readonly stateMutability: "pure";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "ctx";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "decodeCtx";
    readonly outputs: readonly [{
        readonly name: "context";
        readonly internalType: "struct ISuperfluid.Context";
        readonly type: "tuple";
        readonly components: readonly [{
            readonly name: "appCallbackLevel";
            readonly internalType: "uint8";
            readonly type: "uint8";
        }, {
            readonly name: "callType";
            readonly internalType: "uint8";
            readonly type: "uint8";
        }, {
            readonly name: "timestamp";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }, {
            readonly name: "msgSender";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "agreementSelector";
            readonly internalType: "bytes4";
            readonly type: "bytes4";
        }, {
            readonly name: "userData";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }, {
            readonly name: "appCreditGranted";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }, {
            readonly name: "appCreditWantedDeprecated";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }, {
            readonly name: "appCreditUsed";
            readonly internalType: "int256";
            readonly type: "int256";
        }, {
            readonly name: "appAddress";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "appCreditToken";
            readonly internalType: "contract ISuperfluidToken";
            readonly type: "address";
        }];
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "ctx";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "isCtxValid";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "payable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "operations";
        readonly internalType: "struct ISuperfluid.Operation[]";
        readonly type: "tuple[]";
        readonly components: readonly [{
            readonly name: "operationType";
            readonly internalType: "uint32";
            readonly type: "uint32";
        }, {
            readonly name: "target";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "data";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
    }];
    readonly name: "batchCall";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "operations";
        readonly internalType: "struct ISuperfluid.Operation[]";
        readonly type: "tuple[]";
        readonly components: readonly [{
            readonly name: "operationType";
            readonly internalType: "uint32";
            readonly type: "uint32";
        }, {
            readonly name: "target";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "data";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
    }];
    readonly name: "forwardBatchCall";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "forwarder";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "isTrustedForwarder";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "pure";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "versionRecipient";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "string";
        readonly type: "string";
    }];
}];
/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4E583d9390082B65Bef884b629DFA426114CED6d)
 * - [__View Contract on Op Mainnet Optimism Explorer__](https://explorer.optimism.io/address/0x567c4B141ED61923967cA25Ef4906C8781069a10)
 * - [__View Contract on Bnb Smart Chain Bsc Scan__](https://bscscan.com/address/0xd1e2cFb6441680002Eb7A44223160aB9B67d7E6E)
 * - [__View Contract on Gnosis Gnosis Chain Explorer__](https://blockscout.com/xdai/mainnet/address/0x2dFe937cD98Ab92e59cF3139138f18c823a4efE7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x3E14dC1b13c488a8d5D310918780c983bD5982E7)
 * - [__View Contract on Base Basescan__](https://basescan.org/address/0x4C073B3baB6d8826b8C5b229f3cfdC1eC6E47E74)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xCf8Acb4eF033efF16E8080aed4c7D5B9285D2192)
 * - [__View Contract on Celo Celo Explorer__](https://explorer.celo.org/mainnet/address/0xA4Ff07cF81C02CFD356184879D953970cA957585)
 * - [__View Contract on Avalanche Fuji Snow Trace__](https://testnet.snowtrace.io/address/0x85Fe79b998509B77BF10A8BD4001D58475D29386)
 * - [__View Contract on Avalanche Snow Trace__](https://snowtrace.io/address/0x60377C7016E4cdB03C87EF474896C11cB560752C)
 * - [__View Contract on Base Sepolia Blockscout__](https://base-sepolia.blockscout.com/address/0x109412E3C84f0539b43d39dB691B08c90f58dC7c)
 * - [__View Contract on Scroll Sepolia Blockscout__](https://sepolia-blockscout.scroll.io/address/0x42b05a6016B9eED232E13fd56a8F0725693DBF8e)
 * - [__View Contract on Scroll Scrollscan__](https://scrollscan.com/address/0x0F86a21F6216c061B222c224e315d9FC34520bb7)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x109412E3C84f0539b43d39dB691B08c90f58dC7c)
 * - [__View Contract on Optimism Sepolia Blockscout__](https://optimism-sepolia.blockscout.com/address/0xd399e2Fb5f4cf3722a11F65b88FAB6B2B8621005)
 */
export declare const hostAddress: {
    readonly 1: "0x4E583d9390082B65Bef884b629DFA426114CED6d";
    readonly 10: "0x567c4B141ED61923967cA25Ef4906C8781069a10";
    readonly 56: "0xd1e2cFb6441680002Eb7A44223160aB9B67d7E6E";
    readonly 100: "0x2dFe937cD98Ab92e59cF3139138f18c823a4efE7";
    readonly 137: "0x3E14dC1b13c488a8d5D310918780c983bD5982E7";
    readonly 8453: "0x4C073B3baB6d8826b8C5b229f3cfdC1eC6E47E74";
    readonly 42161: "0xCf8Acb4eF033efF16E8080aed4c7D5B9285D2192";
    readonly 42220: "0xA4Ff07cF81C02CFD356184879D953970cA957585";
    readonly 43113: "0x85Fe79b998509B77BF10A8BD4001D58475D29386";
    readonly 43114: "0x60377C7016E4cdB03C87EF474896C11cB560752C";
    readonly 84532: "0x109412E3C84f0539b43d39dB691B08c90f58dC7c";
    readonly 534351: "0x42b05a6016B9eED232E13fd56a8F0725693DBF8e";
    readonly 534352: "0x0F86a21F6216c061B222c224e315d9FC34520bb7";
    readonly 11155111: "0x109412E3C84f0539b43d39dB691B08c90f58dC7c";
    readonly 11155420: "0xd399e2Fb5f4cf3722a11F65b88FAB6B2B8621005";
    readonly 666666666: "0xc1314EdcD7e478C831a7a24169F7dEADB2646eD2";
};
/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4E583d9390082B65Bef884b629DFA426114CED6d)
 * - [__View Contract on Op Mainnet Optimism Explorer__](https://explorer.optimism.io/address/0x567c4B141ED61923967cA25Ef4906C8781069a10)
 * - [__View Contract on Bnb Smart Chain Bsc Scan__](https://bscscan.com/address/0xd1e2cFb6441680002Eb7A44223160aB9B67d7E6E)
 * - [__View Contract on Gnosis Gnosis Chain Explorer__](https://blockscout.com/xdai/mainnet/address/0x2dFe937cD98Ab92e59cF3139138f18c823a4efE7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x3E14dC1b13c488a8d5D310918780c983bD5982E7)
 * - [__View Contract on Base Basescan__](https://basescan.org/address/0x4C073B3baB6d8826b8C5b229f3cfdC1eC6E47E74)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xCf8Acb4eF033efF16E8080aed4c7D5B9285D2192)
 * - [__View Contract on Celo Celo Explorer__](https://explorer.celo.org/mainnet/address/0xA4Ff07cF81C02CFD356184879D953970cA957585)
 * - [__View Contract on Avalanche Fuji Snow Trace__](https://testnet.snowtrace.io/address/0x85Fe79b998509B77BF10A8BD4001D58475D29386)
 * - [__View Contract on Avalanche Snow Trace__](https://snowtrace.io/address/0x60377C7016E4cdB03C87EF474896C11cB560752C)
 * - [__View Contract on Base Sepolia Blockscout__](https://base-sepolia.blockscout.com/address/0x109412E3C84f0539b43d39dB691B08c90f58dC7c)
 * - [__View Contract on Scroll Sepolia Blockscout__](https://sepolia-blockscout.scroll.io/address/0x42b05a6016B9eED232E13fd56a8F0725693DBF8e)
 * - [__View Contract on Scroll Scrollscan__](https://scrollscan.com/address/0x0F86a21F6216c061B222c224e315d9FC34520bb7)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x109412E3C84f0539b43d39dB691B08c90f58dC7c)
 * - [__View Contract on Optimism Sepolia Blockscout__](https://optimism-sepolia.blockscout.com/address/0xd399e2Fb5f4cf3722a11F65b88FAB6B2B8621005)
 */
export declare const hostConfig: {
    readonly address: {
        readonly 1: "0x4E583d9390082B65Bef884b629DFA426114CED6d";
        readonly 10: "0x567c4B141ED61923967cA25Ef4906C8781069a10";
        readonly 56: "0xd1e2cFb6441680002Eb7A44223160aB9B67d7E6E";
        readonly 100: "0x2dFe937cD98Ab92e59cF3139138f18c823a4efE7";
        readonly 137: "0x3E14dC1b13c488a8d5D310918780c983bD5982E7";
        readonly 8453: "0x4C073B3baB6d8826b8C5b229f3cfdC1eC6E47E74";
        readonly 42161: "0xCf8Acb4eF033efF16E8080aed4c7D5B9285D2192";
        readonly 42220: "0xA4Ff07cF81C02CFD356184879D953970cA957585";
        readonly 43113: "0x85Fe79b998509B77BF10A8BD4001D58475D29386";
        readonly 43114: "0x60377C7016E4cdB03C87EF474896C11cB560752C";
        readonly 84532: "0x109412E3C84f0539b43d39dB691B08c90f58dC7c";
        readonly 534351: "0x42b05a6016B9eED232E13fd56a8F0725693DBF8e";
        readonly 534352: "0x0F86a21F6216c061B222c224e315d9FC34520bb7";
        readonly 11155111: "0x109412E3C84f0539b43d39dB691B08c90f58dC7c";
        readonly 11155420: "0xd399e2Fb5f4cf3722a11F65b88FAB6B2B8621005";
        readonly 666666666: "0xc1314EdcD7e478C831a7a24169F7dEADB2646eD2";
    };
    readonly abi: readonly [{
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
        readonly inputs: readonly [{
            readonly name: "nonUpgradable";
            readonly internalType: "bool";
            readonly type: "bool";
        }, {
            readonly name: "appWhiteListingEnabled";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly type: "error";
        readonly inputs: readonly [{
            readonly name: "_code";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
        readonly name: "APP_RULE";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_AGREEMENT_ALREADY_REGISTERED";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_AGREEMENT_CALLBACK_IS_NOT_ACTION";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_AGREEMENT_IS_NOT_REGISTERED";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_CALL_AGREEMENT_WITH_CTX_FROM_WRONG_ADDRESS";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_CALL_APP_ACTION_WITH_CTX_FROM_WRONG_ADDRESS";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_CANNOT_DOWNGRADE_TO_NON_UPGRADEABLE";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_INVALID_CONFIG_WORD";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_MAX_256_AGREEMENTS";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_MUST_BE_CONTRACT";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_NEED_MORE_GAS";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_NON_UPGRADEABLE";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_NON_ZERO_LENGTH_PLACEHOLDER_CTX";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_NOT_A_SUPER_APP";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_NO_APP_REGISTRATION_PERMISSION";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_ONLY_GOVERNANCE";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_ONLY_LISTED_AGREEMENT";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_RECEIVER_IS_NOT_SUPER_APP";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_SENDER_IS_NOT_SUPER_APP";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_SOURCE_APP_NEEDS_HIGHER_APP_LEVEL";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_SUPER_APP_ALREADY_REGISTERED";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_SUPER_APP_IS_JAILED";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "HOST_UNKNOWN_BATCH_CALL_OPERATION_TYPE";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "agreementType";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
            readonly indexed: false;
        }, {
            readonly name: "code";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: false;
        }];
        readonly name: "AgreementClassRegistered";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "agreementType";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
            readonly indexed: false;
        }, {
            readonly name: "code";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: false;
        }];
        readonly name: "AgreementClassUpdated";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "app";
            readonly internalType: "contract ISuperApp";
            readonly type: "address";
            readonly indexed: true;
        }];
        readonly name: "AppRegistered";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "uuid";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
            readonly indexed: false;
        }, {
            readonly name: "codeAddress";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: false;
        }];
        readonly name: "CodeUpdated";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "oldGov";
            readonly internalType: "contract ISuperfluidGovernance";
            readonly type: "address";
            readonly indexed: false;
        }, {
            readonly name: "newGov";
            readonly internalType: "contract ISuperfluidGovernance";
            readonly type: "address";
            readonly indexed: false;
        }];
        readonly name: "GovernanceReplaced";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "version";
            readonly internalType: "uint8";
            readonly type: "uint8";
            readonly indexed: false;
        }];
        readonly name: "Initialized";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "app";
            readonly internalType: "contract ISuperApp";
            readonly type: "address";
            readonly indexed: true;
        }, {
            readonly name: "reason";
            readonly internalType: "uint256";
            readonly type: "uint256";
            readonly indexed: false;
        }];
        readonly name: "Jail";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "beaconProxy";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }, {
            readonly name: "newBeaconLogic";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: false;
        }];
        readonly name: "PoolBeaconLogicUpdated";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "newFactory";
            readonly internalType: "contract ISuperTokenFactory";
            readonly type: "address";
            readonly indexed: false;
        }];
        readonly name: "SuperTokenFactoryUpdated";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
            readonly indexed: true;
        }, {
            readonly name: "code";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: false;
        }];
        readonly name: "SuperTokenLogicUpdated";
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "APP_WHITE_LISTING_ENABLED";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "CALLBACK_GAS_LIMIT";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "uint64";
            readonly type: "uint64";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "MAX_APP_CALLBACK_LEVEL";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "MAX_NUM_AGREEMENTS";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "uint32";
            readonly type: "uint32";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "NON_UPGRADABLE_DEPLOYMENT";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "castrate";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "getCodeAddress";
        readonly outputs: readonly [{
            readonly name: "codeAddress";
            readonly internalType: "address";
            readonly type: "address";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "gov";
            readonly internalType: "contract ISuperfluidGovernance";
            readonly type: "address";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "pure";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "proxiableUUID";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "newAddress";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "updateCode";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "getNow";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "getGovernance";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "contract ISuperfluidGovernance";
            readonly type: "address";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "newGov";
            readonly internalType: "contract ISuperfluidGovernance";
            readonly type: "address";
        }];
        readonly name: "replaceGovernance";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "agreementClassLogic";
            readonly internalType: "contract ISuperAgreement";
            readonly type: "address";
        }];
        readonly name: "registerAgreementClass";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "agreementClassLogic";
            readonly internalType: "contract ISuperAgreement";
            readonly type: "address";
        }];
        readonly name: "updateAgreementClass";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "agreementType";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
        }];
        readonly name: "isAgreementTypeListed";
        readonly outputs: readonly [{
            readonly name: "yes";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "agreementClass";
            readonly internalType: "contract ISuperAgreement";
            readonly type: "address";
        }];
        readonly name: "isAgreementClassListed";
        readonly outputs: readonly [{
            readonly name: "yes";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "agreementType";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
        }];
        readonly name: "getAgreementClass";
        readonly outputs: readonly [{
            readonly name: "agreementClass";
            readonly internalType: "contract ISuperAgreement";
            readonly type: "address";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "bitmap";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
        readonly name: "mapAgreementClasses";
        readonly outputs: readonly [{
            readonly name: "agreementClasses";
            readonly internalType: "contract ISuperAgreement[]";
            readonly type: "address[]";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "bitmap";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }, {
            readonly name: "agreementType";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
        }];
        readonly name: "addToAgreementClassesBitmap";
        readonly outputs: readonly [{
            readonly name: "newBitmap";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "bitmap";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }, {
            readonly name: "agreementType";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
        }];
        readonly name: "removeFromAgreementClassesBitmap";
        readonly outputs: readonly [{
            readonly name: "newBitmap";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "getSuperTokenFactory";
        readonly outputs: readonly [{
            readonly name: "factory";
            readonly internalType: "contract ISuperTokenFactory";
            readonly type: "address";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "getSuperTokenFactoryLogic";
        readonly outputs: readonly [{
            readonly name: "logic";
            readonly internalType: "address";
            readonly type: "address";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "newFactory";
            readonly internalType: "contract ISuperTokenFactory";
            readonly type: "address";
        }];
        readonly name: "updateSuperTokenFactory";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "newLogicOverride";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "updateSuperTokenLogic";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "contract ISuperToken";
            readonly type: "address";
        }, {
            readonly name: "newAdmin";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "changeSuperTokenAdmin";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "newLogic";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "updatePoolBeaconLogic";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "configWord";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
        readonly name: "registerApp";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "app";
            readonly internalType: "contract ISuperApp";
            readonly type: "address";
        }, {
            readonly name: "configWord";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
        readonly name: "registerApp";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "configWord";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }, {
            readonly name: "registrationKey";
            readonly internalType: "string";
            readonly type: "string";
        }];
        readonly name: "registerAppWithKey";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "app";
            readonly internalType: "contract ISuperApp";
            readonly type: "address";
        }, {
            readonly name: "configWord";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
        readonly name: "registerAppByFactory";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "app";
            readonly internalType: "contract ISuperApp";
            readonly type: "address";
        }];
        readonly name: "isApp";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "appAddr";
            readonly internalType: "contract ISuperApp";
            readonly type: "address";
        }];
        readonly name: "getAppCallbackLevel";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "uint8";
            readonly type: "uint8";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "app";
            readonly internalType: "contract ISuperApp";
            readonly type: "address";
        }];
        readonly name: "getAppManifest";
        readonly outputs: readonly [{
            readonly name: "isSuperApp";
            readonly internalType: "bool";
            readonly type: "bool";
        }, {
            readonly name: "isJailed";
            readonly internalType: "bool";
            readonly type: "bool";
        }, {
            readonly name: "noopMask";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "app";
            readonly internalType: "contract ISuperApp";
            readonly type: "address";
        }];
        readonly name: "isAppJailed";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "targetApp";
            readonly internalType: "contract ISuperApp";
            readonly type: "address";
        }];
        readonly name: "allowCompositeApp";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "app";
            readonly internalType: "contract ISuperApp";
            readonly type: "address";
        }, {
            readonly name: "targetApp";
            readonly internalType: "contract ISuperApp";
            readonly type: "address";
        }];
        readonly name: "isCompositeAppAllowed";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "app";
            readonly internalType: "contract ISuperApp";
            readonly type: "address";
        }, {
            readonly name: "callData";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }, {
            readonly name: "isTermination";
            readonly internalType: "bool";
            readonly type: "bool";
        }, {
            readonly name: "ctx";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
        readonly name: "callAppBeforeCallback";
        readonly outputs: readonly [{
            readonly name: "cbdata";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "app";
            readonly internalType: "contract ISuperApp";
            readonly type: "address";
        }, {
            readonly name: "callData";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }, {
            readonly name: "isTermination";
            readonly internalType: "bool";
            readonly type: "bool";
        }, {
            readonly name: "ctx";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
        readonly name: "callAppAfterCallback";
        readonly outputs: readonly [{
            readonly name: "newCtx";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "ctx";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }, {
            readonly name: "app";
            readonly internalType: "contract ISuperApp";
            readonly type: "address";
        }, {
            readonly name: "appCreditGranted";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }, {
            readonly name: "appCreditUsed";
            readonly internalType: "int256";
            readonly type: "int256";
        }, {
            readonly name: "appCreditToken";
            readonly internalType: "contract ISuperfluidToken";
            readonly type: "address";
        }];
        readonly name: "appCallbackPush";
        readonly outputs: readonly [{
            readonly name: "appCtx";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "ctx";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }, {
            readonly name: "appCreditUsedDelta";
            readonly internalType: "int256";
            readonly type: "int256";
        }];
        readonly name: "appCallbackPop";
        readonly outputs: readonly [{
            readonly name: "newCtx";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "ctx";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }, {
            readonly name: "appCreditUsedMore";
            readonly internalType: "int256";
            readonly type: "int256";
        }];
        readonly name: "ctxUseCredit";
        readonly outputs: readonly [{
            readonly name: "newCtx";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "ctx";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }, {
            readonly name: "app";
            readonly internalType: "contract ISuperApp";
            readonly type: "address";
        }, {
            readonly name: "reason";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
        readonly name: "jailApp";
        readonly outputs: readonly [{
            readonly name: "newCtx";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "agreementClass";
            readonly internalType: "contract ISuperAgreement";
            readonly type: "address";
        }, {
            readonly name: "callData";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }, {
            readonly name: "userData";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
        readonly name: "callAgreement";
        readonly outputs: readonly [{
            readonly name: "returnedData";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "app";
            readonly internalType: "contract ISuperApp";
            readonly type: "address";
        }, {
            readonly name: "callData";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
        readonly name: "callAppAction";
        readonly outputs: readonly [{
            readonly name: "returnedData";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "agreementClass";
            readonly internalType: "contract ISuperAgreement";
            readonly type: "address";
        }, {
            readonly name: "callData";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }, {
            readonly name: "userData";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }, {
            readonly name: "ctx";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
        readonly name: "callAgreementWithContext";
        readonly outputs: readonly [{
            readonly name: "newCtx";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }, {
            readonly name: "returnedData";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "app";
            readonly internalType: "contract ISuperApp";
            readonly type: "address";
        }, {
            readonly name: "callData";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }, {
            readonly name: "ctx";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
        readonly name: "callAppActionWithContext";
        readonly outputs: readonly [{
            readonly name: "newCtx";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
    }, {
        readonly stateMutability: "pure";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "ctx";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
        readonly name: "decodeCtx";
        readonly outputs: readonly [{
            readonly name: "context";
            readonly internalType: "struct ISuperfluid.Context";
            readonly type: "tuple";
            readonly components: readonly [{
                readonly name: "appCallbackLevel";
                readonly internalType: "uint8";
                readonly type: "uint8";
            }, {
                readonly name: "callType";
                readonly internalType: "uint8";
                readonly type: "uint8";
            }, {
                readonly name: "timestamp";
                readonly internalType: "uint256";
                readonly type: "uint256";
            }, {
                readonly name: "msgSender";
                readonly internalType: "address";
                readonly type: "address";
            }, {
                readonly name: "agreementSelector";
                readonly internalType: "bytes4";
                readonly type: "bytes4";
            }, {
                readonly name: "userData";
                readonly internalType: "bytes";
                readonly type: "bytes";
            }, {
                readonly name: "appCreditGranted";
                readonly internalType: "uint256";
                readonly type: "uint256";
            }, {
                readonly name: "appCreditWantedDeprecated";
                readonly internalType: "uint256";
                readonly type: "uint256";
            }, {
                readonly name: "appCreditUsed";
                readonly internalType: "int256";
                readonly type: "int256";
            }, {
                readonly name: "appAddress";
                readonly internalType: "address";
                readonly type: "address";
            }, {
                readonly name: "appCreditToken";
                readonly internalType: "contract ISuperfluidToken";
                readonly type: "address";
            }];
        }];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "ctx";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
        readonly name: "isCtxValid";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly stateMutability: "payable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "operations";
            readonly internalType: "struct ISuperfluid.Operation[]";
            readonly type: "tuple[]";
            readonly components: readonly [{
                readonly name: "operationType";
                readonly internalType: "uint32";
                readonly type: "uint32";
            }, {
                readonly name: "target";
                readonly internalType: "address";
                readonly type: "address";
            }, {
                readonly name: "data";
                readonly internalType: "bytes";
                readonly type: "bytes";
            }];
        }];
        readonly name: "batchCall";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "nonpayable";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "operations";
            readonly internalType: "struct ISuperfluid.Operation[]";
            readonly type: "tuple[]";
            readonly components: readonly [{
                readonly name: "operationType";
                readonly internalType: "uint32";
                readonly type: "uint32";
            }, {
                readonly name: "target";
                readonly internalType: "address";
                readonly type: "address";
            }, {
                readonly name: "data";
                readonly internalType: "bytes";
                readonly type: "bytes";
            }];
        }];
        readonly name: "forwardBatchCall";
        readonly outputs: readonly [];
    }, {
        readonly stateMutability: "view";
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "forwarder";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "isTrustedForwarder";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }, {
        readonly stateMutability: "pure";
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "versionRecipient";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "string";
            readonly type: "string";
        }];
    }];
};
export declare const nativeAssetSuperTokenABI: readonly [{
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_AGREEMENT_ALREADY_EXISTS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_BURN_INSUFFICIENT_BALANCE";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_ONLY_HOST";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_ONLY_LISTED_AGREEMENT";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_NO_UNDERLYING_TOKEN";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_ONLY_ADMIN";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_ONLY_GOV_OWNER";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_ONLY_SELF";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "oldAdmin";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "newAdmin";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "AdminChanged";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "data";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
        readonly indexed: false;
    }];
    readonly name: "AgreementCreated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "penaltyAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "rewardAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "rewardAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "AgreementLiquidated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "liquidatorAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "penaltyAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "bondAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "rewardAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "bailoutAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "AgreementLiquidatedBy";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "liquidatorAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "targetAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "rewardAmountReceiver";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "rewardAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "targetAccountBalanceDelta";
        readonly internalType: "int256";
        readonly type: "int256";
        readonly indexed: false;
    }, {
        readonly name: "liquidationTypeData";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }];
    readonly name: "AgreementLiquidatedV2";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "slotId";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "AgreementStateUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }];
    readonly name: "AgreementTerminated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "data";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
        readonly indexed: false;
    }];
    readonly name: "AgreementUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "owner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "Approval";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "tokenHolder";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "AuthorizedOperator";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "bailoutAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "bailoutAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "Bailout";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "from";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "data";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }, {
        readonly name: "operatorData";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }];
    readonly name: "Burned";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "constantInflowNFT";
        readonly internalType: "contract IConstantInflowNFT";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "ConstantInflowNFTCreated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "constantOutflowNFT";
        readonly internalType: "contract IConstantOutflowNFT";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "ConstantOutflowNFTCreated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "data";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }, {
        readonly name: "operatorData";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }];
    readonly name: "Minted";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "poolAdminNFT";
        readonly internalType: "contract IPoolAdminNFT";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "PoolAdminNFTCreated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "poolMemberNFT";
        readonly internalType: "contract IPoolMemberNFT";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "PoolMemberNFTCreated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "tokenHolder";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "RevokedOperator";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "from";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "data";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }, {
        readonly name: "operatorData";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }];
    readonly name: "Sent";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "TokenDowngraded";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "TokenUpgraded";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "from";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "Transfer";
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "CONSTANT_INFLOW_NFT";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "contract IConstantInflowNFT";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "CONSTANT_OUTFLOW_NFT";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "contract IConstantOutflowNFT";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "POOL_ADMIN_NFT";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "contract IPoolAdminNFT";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "POOL_MEMBER_NFT";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "contract IPoolMemberNFT";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "owner";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "allowance";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "approve";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "authorizeOperator";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "balanceOf";
    readonly outputs: readonly [{
        readonly name: "balance";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "burn";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newAdmin";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "changeAdmin";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "data";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
    }];
    readonly name: "createAgreement";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "decimals";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "subtractedValue";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "decreaseAllowance";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "defaultOperators";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "downgrade";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "downgradeTo";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "wad";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "downgradeToETH";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getAccountActiveAgreements";
    readonly outputs: readonly [{
        readonly name: "activeAgreements";
        readonly internalType: "contract ISuperAgreement[]";
        readonly type: "address[]";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getAdmin";
    readonly outputs: readonly [{
        readonly name: "admin";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "dataLength";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "getAgreementData";
    readonly outputs: readonly [{
        readonly name: "data";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "slotId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "dataLength";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "getAgreementStateSlot";
    readonly outputs: readonly [{
        readonly name: "slotData";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getHost";
    readonly outputs: readonly [{
        readonly name: "host";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getUnderlyingDecimals";
    readonly outputs: readonly [{
        readonly name: "underlyingDecimals";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getUnderlyingToken";
    readonly outputs: readonly [{
        readonly name: "tokenAddr";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "granularity";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "addedValue";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "increaseAllowance";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "underlyingToken";
        readonly internalType: "contract IERC20";
        readonly type: "address";
    }, {
        readonly name: "underlyingDecimals";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }, {
        readonly name: "n";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "s";
        readonly internalType: "string";
        readonly type: "string";
    }];
    readonly name: "initialize";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "underlyingToken";
        readonly internalType: "contract IERC20";
        readonly type: "address";
    }, {
        readonly name: "underlyingDecimals";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }, {
        readonly name: "n";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "s";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "admin";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "initializeWithAdmin";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "timestamp";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "isAccountCritical";
    readonly outputs: readonly [{
        readonly name: "isCritical";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "isAccountCriticalNow";
    readonly outputs: readonly [{
        readonly name: "isCritical";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "timestamp";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "isAccountSolvent";
    readonly outputs: readonly [{
        readonly name: "isSolvent";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "isAccountSolventNow";
    readonly outputs: readonly [{
        readonly name: "isSolvent";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "tokenHolder";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "isOperatorFor";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "liquidationTypeData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "liquidatorAccount";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "useDefaultRewardAccount";
        readonly internalType: "bool";
        readonly type: "bool";
    }, {
        readonly name: "targetAccount";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "rewardAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "targetAccountBalanceDelta";
        readonly internalType: "int256";
        readonly type: "int256";
    }];
    readonly name: "makeLiquidationPayoutsV2";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "name";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "string";
        readonly type: "string";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "operationApprove";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "subtractedValue";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "operationDecreaseAllowance";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "operationDowngrade";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "addedValue";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "operationIncreaseAllowance";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "operationSend";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "operationTransferFrom";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "operationUpgrade";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "operatorData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "operatorBurn";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "operatorData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "operatorSend";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "timestamp";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "realtimeBalanceOf";
    readonly outputs: readonly [{
        readonly name: "availableBalance";
        readonly internalType: "int256";
        readonly type: "int256";
    }, {
        readonly name: "deposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "owedDeposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "realtimeBalanceOfNow";
    readonly outputs: readonly [{
        readonly name: "availableBalance";
        readonly internalType: "int256";
        readonly type: "int256";
    }, {
        readonly name: "deposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "owedDeposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "timestamp";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "revokeOperator";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "selfApproveFor";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "selfBurn";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "selfMint";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "selfTransferFrom";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "send";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "delta";
        readonly internalType: "int256";
        readonly type: "int256";
    }];
    readonly name: "settleBalance";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "symbol";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "string";
        readonly type: "string";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "dataLength";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "terminateAgreement";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "toUnderlyingAmount";
    readonly outputs: readonly [{
        readonly name: "underlyingAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "adjustedAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "totalSupply";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "transfer";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "transferAll";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "transferFrom";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "data";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
    }];
    readonly name: "updateAgreementData";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "slotId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "slotData";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
    }];
    readonly name: "updateAgreementStateSlot";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "upgrade";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "payable";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "upgradeByETH";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "payable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "upgradeByETHTo";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "upgradeTo";
    readonly outputs: readonly [];
}];
export declare const pureSuperTokenABI: readonly [{
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_AGREEMENT_ALREADY_EXISTS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_BURN_INSUFFICIENT_BALANCE";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_ONLY_HOST";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_ONLY_LISTED_AGREEMENT";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_NO_UNDERLYING_TOKEN";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_ONLY_ADMIN";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_ONLY_GOV_OWNER";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_ONLY_SELF";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "oldAdmin";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "newAdmin";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "AdminChanged";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "data";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
        readonly indexed: false;
    }];
    readonly name: "AgreementCreated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "penaltyAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "rewardAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "rewardAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "AgreementLiquidated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "liquidatorAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "penaltyAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "bondAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "rewardAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "bailoutAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "AgreementLiquidatedBy";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "liquidatorAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "targetAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "rewardAmountReceiver";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "rewardAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "targetAccountBalanceDelta";
        readonly internalType: "int256";
        readonly type: "int256";
        readonly indexed: false;
    }, {
        readonly name: "liquidationTypeData";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }];
    readonly name: "AgreementLiquidatedV2";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "slotId";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "AgreementStateUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }];
    readonly name: "AgreementTerminated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "data";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
        readonly indexed: false;
    }];
    readonly name: "AgreementUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "owner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "Approval";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "tokenHolder";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "AuthorizedOperator";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "bailoutAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "bailoutAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "Bailout";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "from";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "data";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }, {
        readonly name: "operatorData";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }];
    readonly name: "Burned";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "constantInflowNFT";
        readonly internalType: "contract IConstantInflowNFT";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "ConstantInflowNFTCreated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "constantOutflowNFT";
        readonly internalType: "contract IConstantOutflowNFT";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "ConstantOutflowNFTCreated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "data";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }, {
        readonly name: "operatorData";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }];
    readonly name: "Minted";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "poolAdminNFT";
        readonly internalType: "contract IPoolAdminNFT";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "PoolAdminNFTCreated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "poolMemberNFT";
        readonly internalType: "contract IPoolMemberNFT";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "PoolMemberNFTCreated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "tokenHolder";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "RevokedOperator";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "from";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "data";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }, {
        readonly name: "operatorData";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }];
    readonly name: "Sent";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "TokenDowngraded";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "TokenUpgraded";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "from";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "Transfer";
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "CONSTANT_INFLOW_NFT";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "contract IConstantInflowNFT";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "CONSTANT_OUTFLOW_NFT";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "contract IConstantOutflowNFT";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "POOL_ADMIN_NFT";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "contract IPoolAdminNFT";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "POOL_MEMBER_NFT";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "contract IPoolMemberNFT";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "owner";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "allowance";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "approve";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "authorizeOperator";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "balanceOf";
    readonly outputs: readonly [{
        readonly name: "balance";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "burn";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newAdmin";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "changeAdmin";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "data";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
    }];
    readonly name: "createAgreement";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "decimals";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "subtractedValue";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "decreaseAllowance";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "defaultOperators";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "downgrade";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "downgradeTo";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getAccountActiveAgreements";
    readonly outputs: readonly [{
        readonly name: "activeAgreements";
        readonly internalType: "contract ISuperAgreement[]";
        readonly type: "address[]";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getAdmin";
    readonly outputs: readonly [{
        readonly name: "admin";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "dataLength";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "getAgreementData";
    readonly outputs: readonly [{
        readonly name: "data";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "slotId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "dataLength";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "getAgreementStateSlot";
    readonly outputs: readonly [{
        readonly name: "slotData";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getHost";
    readonly outputs: readonly [{
        readonly name: "host";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getUnderlyingDecimals";
    readonly outputs: readonly [{
        readonly name: "underlyingDecimals";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getUnderlyingToken";
    readonly outputs: readonly [{
        readonly name: "tokenAddr";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "granularity";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "addedValue";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "increaseAllowance";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "underlyingToken";
        readonly internalType: "contract IERC20";
        readonly type: "address";
    }, {
        readonly name: "underlyingDecimals";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }, {
        readonly name: "n";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "s";
        readonly internalType: "string";
        readonly type: "string";
    }];
    readonly name: "initialize";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "name";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "symbol";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "initialSupply";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "initialize";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "underlyingToken";
        readonly internalType: "contract IERC20";
        readonly type: "address";
    }, {
        readonly name: "underlyingDecimals";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }, {
        readonly name: "n";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "s";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "admin";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "initializeWithAdmin";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "timestamp";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "isAccountCritical";
    readonly outputs: readonly [{
        readonly name: "isCritical";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "isAccountCriticalNow";
    readonly outputs: readonly [{
        readonly name: "isCritical";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "timestamp";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "isAccountSolvent";
    readonly outputs: readonly [{
        readonly name: "isSolvent";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "isAccountSolventNow";
    readonly outputs: readonly [{
        readonly name: "isSolvent";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "tokenHolder";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "isOperatorFor";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "liquidationTypeData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "liquidatorAccount";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "useDefaultRewardAccount";
        readonly internalType: "bool";
        readonly type: "bool";
    }, {
        readonly name: "targetAccount";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "rewardAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "targetAccountBalanceDelta";
        readonly internalType: "int256";
        readonly type: "int256";
    }];
    readonly name: "makeLiquidationPayoutsV2";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "name";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "string";
        readonly type: "string";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "operationApprove";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "subtractedValue";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "operationDecreaseAllowance";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "operationDowngrade";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "addedValue";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "operationIncreaseAllowance";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "operationSend";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "operationTransferFrom";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "operationUpgrade";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "operatorData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "operatorBurn";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "operatorData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "operatorSend";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "timestamp";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "realtimeBalanceOf";
    readonly outputs: readonly [{
        readonly name: "availableBalance";
        readonly internalType: "int256";
        readonly type: "int256";
    }, {
        readonly name: "deposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "owedDeposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "realtimeBalanceOfNow";
    readonly outputs: readonly [{
        readonly name: "availableBalance";
        readonly internalType: "int256";
        readonly type: "int256";
    }, {
        readonly name: "deposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "owedDeposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "timestamp";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "revokeOperator";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "selfApproveFor";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "selfBurn";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "selfMint";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "selfTransferFrom";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "send";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "delta";
        readonly internalType: "int256";
        readonly type: "int256";
    }];
    readonly name: "settleBalance";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "symbol";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "string";
        readonly type: "string";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "dataLength";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "terminateAgreement";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "toUnderlyingAmount";
    readonly outputs: readonly [{
        readonly name: "underlyingAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "adjustedAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "totalSupply";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "transfer";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "transferAll";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "transferFrom";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "data";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
    }];
    readonly name: "updateAgreementData";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "slotId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "slotData";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
    }];
    readonly name: "updateAgreementStateSlot";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "upgrade";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "upgradeTo";
    readonly outputs: readonly [];
}];
export declare const superTokenABI: readonly [{
    readonly stateMutability: "nonpayable";
    readonly type: "constructor";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "constantOutflowNFT";
        readonly internalType: "contract IConstantOutflowNFT";
        readonly type: "address";
    }, {
        readonly name: "constantInflowNFT";
        readonly internalType: "contract IConstantInflowNFT";
        readonly type: "address";
    }, {
        readonly name: "poolAdminNFT";
        readonly internalType: "contract IPoolAdminNFT";
        readonly type: "address";
    }, {
        readonly name: "poolMemberNFT";
        readonly internalType: "contract IPoolMemberNFT";
        readonly type: "address";
    }];
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_AGREEMENT_ALREADY_EXISTS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_BURN_INSUFFICIENT_BALANCE";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_ONLY_HOST";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_TOKEN_ONLY_LISTED_AGREEMENT";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_NO_UNDERLYING_TOKEN";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_ONLY_ADMIN";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_ONLY_GOV_OWNER";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_ONLY_SELF";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "oldAdmin";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "newAdmin";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "AdminChanged";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "data";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
        readonly indexed: false;
    }];
    readonly name: "AgreementCreated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "penaltyAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "rewardAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "rewardAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "AgreementLiquidated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "liquidatorAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "penaltyAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "bondAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "rewardAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "bailoutAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "AgreementLiquidatedBy";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "liquidatorAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "targetAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "rewardAmountReceiver";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "rewardAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "targetAccountBalanceDelta";
        readonly internalType: "int256";
        readonly type: "int256";
        readonly indexed: false;
    }, {
        readonly name: "liquidationTypeData";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }];
    readonly name: "AgreementLiquidatedV2";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "slotId";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "AgreementStateUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }];
    readonly name: "AgreementTerminated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "data";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
        readonly indexed: false;
    }];
    readonly name: "AgreementUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "owner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "Approval";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "tokenHolder";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "AuthorizedOperator";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "bailoutAccount";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "bailoutAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "Bailout";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "from";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "data";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }, {
        readonly name: "operatorData";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }];
    readonly name: "Burned";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "uuid";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "codeAddress";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }];
    readonly name: "CodeUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "constantInflowNFT";
        readonly internalType: "contract IConstantInflowNFT";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "ConstantInflowNFTCreated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "constantOutflowNFT";
        readonly internalType: "contract IConstantOutflowNFT";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "ConstantOutflowNFTCreated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "version";
        readonly internalType: "uint8";
        readonly type: "uint8";
        readonly indexed: false;
    }];
    readonly name: "Initialized";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "data";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }, {
        readonly name: "operatorData";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }];
    readonly name: "Minted";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "poolAdminNFT";
        readonly internalType: "contract IPoolAdminNFT";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "PoolAdminNFTCreated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "poolMemberNFT";
        readonly internalType: "contract IPoolMemberNFT";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "PoolMemberNFTCreated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "tokenHolder";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "RevokedOperator";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "from";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "data";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }, {
        readonly name: "operatorData";
        readonly internalType: "bytes";
        readonly type: "bytes";
        readonly indexed: false;
    }];
    readonly name: "Sent";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "TokenDowngraded";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "TokenUpgraded";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "from";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "Transfer";
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "CONSTANT_INFLOW_NFT";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "contract IConstantInflowNFT";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "CONSTANT_OUTFLOW_NFT";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "contract IConstantOutflowNFT";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "POOL_ADMIN_NFT";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "contract IPoolAdminNFT";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "POOL_MEMBER_NFT";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "contract IPoolMemberNFT";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "castrate";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "data";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
    }];
    readonly name: "createAgreement";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "getAccountActiveAgreements";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "contract ISuperAgreement[]";
        readonly type: "address[]";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "dataLength";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "getAgreementData";
    readonly outputs: readonly [{
        readonly name: "data";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "slotId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "dataLength";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "getAgreementStateSlot";
    readonly outputs: readonly [{
        readonly name: "slotData";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getCodeAddress";
    readonly outputs: readonly [{
        readonly name: "codeAddress";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getHost";
    readonly outputs: readonly [{
        readonly name: "host";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "timestamp";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "isAccountCritical";
    readonly outputs: readonly [{
        readonly name: "isCritical";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "isAccountCriticalNow";
    readonly outputs: readonly [{
        readonly name: "isCritical";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "timestamp";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "isAccountSolvent";
    readonly outputs: readonly [{
        readonly name: "isSolvent";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "isAccountSolventNow";
    readonly outputs: readonly [{
        readonly name: "isSolvent";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "liquidationTypeData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "liquidatorAccount";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "useDefaultRewardAccount";
        readonly internalType: "bool";
        readonly type: "bool";
    }, {
        readonly name: "targetAccount";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "rewardAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "targetAccountBalanceDelta";
        readonly internalType: "int256";
        readonly type: "int256";
    }];
    readonly name: "makeLiquidationPayoutsV2";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "timestamp";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "realtimeBalanceOf";
    readonly outputs: readonly [{
        readonly name: "availableBalance";
        readonly internalType: "int256";
        readonly type: "int256";
    }, {
        readonly name: "deposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "owedDeposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "realtimeBalanceOfNow";
    readonly outputs: readonly [{
        readonly name: "availableBalance";
        readonly internalType: "int256";
        readonly type: "int256";
    }, {
        readonly name: "deposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "owedDeposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "timestamp";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "delta";
        readonly internalType: "int256";
        readonly type: "int256";
    }];
    readonly name: "settleBalance";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "dataLength";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "terminateAgreement";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "id";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "data";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
    }];
    readonly name: "updateAgreementData";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "slotId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "slotData";
        readonly internalType: "bytes32[]";
        readonly type: "bytes32[]";
    }];
    readonly name: "updateAgreementStateSlot";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "underlyingToken";
        readonly internalType: "contract IERC20";
        readonly type: "address";
    }, {
        readonly name: "underlyingDecimals";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }, {
        readonly name: "n";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "s";
        readonly internalType: "string";
        readonly type: "string";
    }];
    readonly name: "initialize";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "underlyingToken";
        readonly internalType: "contract IERC20";
        readonly type: "address";
    }, {
        readonly name: "underlyingDecimals";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }, {
        readonly name: "n";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "s";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "admin";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "initializeWithAdmin";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "pure";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "proxiableUUID";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newAddress";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "updateCode";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newAdmin";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "changeAdmin";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getAdmin";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "name";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "string";
        readonly type: "string";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "symbol";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "string";
        readonly type: "string";
    }];
}, {
    readonly stateMutability: "pure";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "decimals";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "totalSupply";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "balanceOf";
    readonly outputs: readonly [{
        readonly name: "balance";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "transfer";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "allowance";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "approve";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "holder";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "transferFrom";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "addedValue";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "increaseAllowance";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "subtractedValue";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "decreaseAllowance";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "pure";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "granularity";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "send";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "burn";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "tokenHolder";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "isOperatorFor";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "authorizeOperator";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "revokeOperator";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "defaultOperators";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "operatorData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "operatorSend";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "operatorData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "operatorBurn";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "selfMint";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "selfBurn";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "selfApproveFor";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "holder";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "selfTransferFrom";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "transferAll";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getUnderlyingToken";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getUnderlyingDecimals";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "toUnderlyingAmount";
    readonly outputs: readonly [{
        readonly name: "underlyingAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "adjustedAmount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "upgrade";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "upgradeTo";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "downgrade";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "downgradeTo";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "operationApprove";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "addedValue";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "operationIncreaseAllowance";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "subtractedValue";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "operationDecreaseAllowance";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "operationTransferFrom";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "userData";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "operationSend";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "operationUpgrade";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "operationDowngrade";
    readonly outputs: readonly [];
}];
export declare const superfluidGovernanceABI: readonly [{
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_GOV_II_ONLY_OWNER";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_GOV_INVALID_LIQUIDATION_OR_PATRICIAN_PERIOD";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SF_GOV_MUST_BE_CONTRACT";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "factory";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "authorized";
        readonly internalType: "bool";
        readonly type: "bool";
        readonly indexed: false;
    }];
    readonly name: "AppFactoryAuthorizationChanged";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "deployer";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "appRegistrationKey";
        readonly internalType: "string";
        readonly type: "string";
        readonly indexed: false;
    }, {
        readonly name: "expirationTs";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "AppRegistrationKeyChanged";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "isKeySet";
        readonly internalType: "bool";
        readonly type: "bool";
        readonly indexed: false;
    }, {
        readonly name: "liquidationPeriod";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "CFAv1LiquidationPeriodChanged";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "uuid";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "codeAddress";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }];
    readonly name: "CodeUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "key";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
        readonly indexed: false;
    }, {
        readonly name: "isKeySet";
        readonly internalType: "bool";
        readonly type: "bool";
        readonly indexed: false;
    }, {
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "ConfigChanged";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "version";
        readonly internalType: "uint8";
        readonly type: "uint8";
        readonly indexed: false;
    }];
    readonly name: "Initialized";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "previousOwner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "newOwner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "OwnershipTransferred";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "isKeySet";
        readonly internalType: "bool";
        readonly type: "bool";
        readonly indexed: false;
    }, {
        readonly name: "liquidationPeriod";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "patricianPeriod";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "PPPConfigurationChanged";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "isKeySet";
        readonly internalType: "bool";
        readonly type: "bool";
        readonly indexed: false;
    }, {
        readonly name: "rewardAddress";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }];
    readonly name: "RewardAddressChanged";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "isKeySet";
        readonly internalType: "bool";
        readonly type: "bool";
        readonly indexed: false;
    }, {
        readonly name: "minimumDeposit";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "SuperTokenMinimumDepositChanged";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "isKeySet";
        readonly internalType: "bool";
        readonly type: "bool";
        readonly indexed: false;
    }, {
        readonly name: "forwarder";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "enabled";
        readonly internalType: "bool";
        readonly type: "bool";
        readonly indexed: false;
    }];
    readonly name: "TrustedForwarderChanged";
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "factory";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "authorizeAppFactory";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "token";
        readonly internalType: "contract ISuperToken[]";
        readonly type: "address[]";
    }, {
        readonly name: "newAdmins";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }];
    readonly name: "batchChangeSuperTokenAdmin";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "tokens";
        readonly internalType: "contract ISuperToken[]";
        readonly type: "address[]";
    }];
    readonly name: "batchUpdateSuperTokenLogic";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "tokens";
        readonly internalType: "contract ISuperToken[]";
        readonly type: "address[]";
    }, {
        readonly name: "tokenLogics";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }];
    readonly name: "batchUpdateSuperTokenLogic";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "tokens";
        readonly internalType: "contract ISuperToken[]";
        readonly type: "address[]";
    }, {
        readonly name: "minimumDeposits";
        readonly internalType: "uint256[]";
        readonly type: "uint256[]";
    }];
    readonly name: "batchUpdateSuperTokenMinimumDeposit";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "castrate";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "token";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }, {
        readonly name: "newAdmin";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "changeSuperTokenAdmin";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "deployer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "registrationKey";
        readonly internalType: "string";
        readonly type: "string";
    }];
    readonly name: "clearAppRegistrationKey";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
    }, {
        readonly name: "key";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "clearConfig";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
    }];
    readonly name: "clearPPPConfig";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
    }];
    readonly name: "clearRewardAddress";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperToken";
        readonly type: "address";
    }];
    readonly name: "clearSuperTokenMinimumDeposit";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
    }, {
        readonly name: "forwarder";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "disableTrustedForwarder";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
    }, {
        readonly name: "forwarder";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "enableTrustedForwarder";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "getCodeAddress";
    readonly outputs: readonly [{
        readonly name: "codeAddress";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
    }, {
        readonly name: "key";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "getConfigAsAddress";
    readonly outputs: readonly [{
        readonly name: "value";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
    }, {
        readonly name: "key";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "getConfigAsUint256";
    readonly outputs: readonly [{
        readonly name: "period";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
    }];
    readonly name: "getPPPConfig";
    readonly outputs: readonly [{
        readonly name: "liquidationPeriod";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "patricianPeriod";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
    }];
    readonly name: "getRewardAddress";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
    }];
    readonly name: "getSuperTokenMinimumDeposit";
    readonly outputs: readonly [{
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "factory";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "isAuthorizedAppFactory";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
    }, {
        readonly name: "forwarder";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "isTrustedForwarder";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "owner";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "agreementClass";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "registerAgreementClass";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "renounceOwnership";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "newGov";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "replaceGovernance";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "deployer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "registrationKey";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "expirationTs";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setAppRegistrationKey";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
    }, {
        readonly name: "key";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "value";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "setConfig";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
    }, {
        readonly name: "key";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setConfig";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
    }, {
        readonly name: "liquidationPeriod";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "patricianPeriod";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setPPPConfig";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
    }, {
        readonly name: "rewardAddress";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "setRewardAddress";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "superToken";
        readonly internalType: "contract ISuperfluidToken";
        readonly type: "address";
    }, {
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "setSuperTokenMinimumDeposit";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newOwner";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "transferOwnership";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "factory";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "unauthorizeAppFactory";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "hostNewLogic";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "agreementClassNewLogics";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }, {
        readonly name: "superTokenFactoryNewLogic";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "poolBeaconNewLogic";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "updateContracts";
    readonly outputs: readonly [];
}, {
    readonly stateMutability: "view";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "host";
        readonly internalType: "contract ISuperfluid";
        readonly type: "address";
    }, {
        readonly name: "deployer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "registrationKey";
        readonly internalType: "string";
        readonly type: "string";
    }];
    readonly name: "verifyAppRegistrationKey";
    readonly outputs: readonly [{
        readonly name: "validNow";
        readonly internalType: "bool";
        readonly type: "bool";
    }, {
        readonly name: "expirationTs";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
}, {
    readonly stateMutability: "pure";
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "proxiableUUID";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
}, {
    readonly stateMutability: "nonpayable";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newAddress";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "updateCode";
    readonly outputs: readonly [];
}];
//# sourceMappingURL=wagmi-generated.d.ts.map