import { arbitrum, avalanche, avalancheFuji, base, bsc, celo, gnosis, mainnet, optimism, optimismSepolia, polygon, scroll, scrollSepolia, sepolia, } from "wagmi/chains";
import { z } from "zod";
export const chainIds = [
    mainnet.id,
    arbitrum.id,
    avalanche.id,
    avalancheFuji.id,
    base.id,
    bsc.id,
    celo.id,
    gnosis.id,
    optimism.id,
    optimismSepolia.id,
    polygon.id,
    scroll.id,
    scrollSepolia.id,
    sepolia.id,
];
export const supportedNetwork = {
    mainnet, // Keep mainnet first
    arbitrum,
    avalanche,
    avalancheFuji,
    base,
    bsc,
    celo,
    gnosis,
    optimism,
    optimismSepolia,
    polygon,
    scroll,
    scrollSepolia,
    sepolia,
};
const supportedNetworks_ = Object.values(supportedNetwork).sort((a, b) => {
    const testnetA = !!a.testnet;
    const testnetB = !!b.testnet;
    if (testnetA !== testnetB) {
        return testnetA ? 1 : -1; // Put non-testnets first
    }
    return 0;
});
export const chainIdSchema = z.custom((value) => {
    return chainIds.some((x) => x === Number(value));
});
export const supportedNetworkSchema = z
    .object({
    id: chainIdSchema,
})
    .transform((x) => x);
export const supportedNetworks = supportedNetworks_;
