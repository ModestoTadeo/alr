import { Fragment as _Fragment, jsx as _jsx } from "react/jsx-runtime";
import { useMemo } from "react";
import { getAddress } from "viem";
import { mainnet as mainnet_, useEnsAvatar, useEnsName, useNetwork, } from "wagmi";
import { shortenHex } from "./utils.js";
export function AccountAddress({ children, address }) {
    const checksumAddress = useMemo(() => getAddress(address), [address]);
    const shortenedAddress = useMemo(() => shortenHex(checksumAddress), [checksumAddress]);
    const { chains } = useNetwork();
    const mainnet = useMemo(() => chains.find((x) => x.id === mainnet_.id), [chains]);
    const ensChainId = mainnet?.contracts?.ensUniversalResolver
        ? mainnet.id
        : undefined;
    const ensNameResult = useEnsName(ensChainId
        ? {
            address: checksumAddress,
            chainId: ensChainId,
        }
        : undefined);
    const ensAvatarResult = useEnsAvatar(ensNameResult.data && ensChainId
        ? { name: ensNameResult.data, chainId: ensChainId }
        : undefined);
    const result = {
        ensNameResult,
        ensAvatarResult,
        checksumAddress,
        shortenedAddress,
    };
    return _jsx(_Fragment, { children: children(result) });
}
