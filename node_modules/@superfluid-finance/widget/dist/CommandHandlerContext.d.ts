import { CommandHandlingAggregate, State } from "./CommandHandlerState.js";
import { Command } from "./commands.js";
import { ContractWrite } from "./ContractWrite.js";
import { ContractWriteResult } from "./ContractWriteManager.js";
export type CommandHandlerContextValue = {
    status: State["status"];
    commands: ReadonlyArray<CommandHandlingAggregate>;
    contractWrites: ReadonlyArray<ContractWrite>;
    contractWriteResults: ReadonlyArray<ContractWriteResult>;
    sessionId: string | null;
    submitCommands: (commands: ReadonlyArray<Command>) => void;
    writeIndex: number;
    handleNextWrite: (currentWriteIndex: number) => void;
};
export declare const CommandHandlerContext: import("react").Context<CommandHandlerContextValue | undefined>;
export declare function useCommandHandler(): CommandHandlerContextValue;
//# sourceMappingURL=CommandHandlerContext.d.ts.map