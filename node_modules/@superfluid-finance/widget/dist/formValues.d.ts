import { SuperTokenInfo, TokenInfo } from "@superfluid-finance/tokenlist";
import { UseFormReturn } from "react-hook-form";
import { z } from "zod";
import { SupportedNetwork } from "./core/index.js";
declare const paymentOptionWithTokenInfoSchema: z.ZodObject<{
    paymentOption: z.ZodEffects<z.ZodObject<{
        receiverAddress: z.ZodEffects<z.ZodString, `0x${string}`, string>;
        chainId: z.ZodType<1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111, z.ZodTypeDef, 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111>;
        superToken: z.ZodObject<{
            address: z.ZodEffects<z.ZodString, `0x${string}`, string>;
        }, "strip", z.ZodTypeAny, {
            address: `0x${string}`;
        }, {
            address: string;
        }>;
        transferAmountEther: z.ZodOptional<z.ZodEffects<z.ZodEffects<z.ZodString, `${number}`, string>, `${number}`, string>>;
        flowRate: z.ZodOptional<z.ZodEffects<z.ZodObject<{
            amountEther: z.ZodEffects<z.ZodString, `${number}`, string>;
            period: z.ZodEnum<["day", "week", "month", "year"]>;
        }, "strip", z.ZodTypeAny, {
            amountEther: `${number}`;
            period: "day" | "week" | "month" | "year";
        }, {
            amountEther: string;
            period: "day" | "week" | "month" | "year";
        }>, {
            amountEther: `${number}`;
            period: "day" | "week" | "month" | "year";
        }, {
            amountEther: string;
            period: "day" | "week" | "month" | "year";
        }>>;
        userData: z.ZodOptional<z.ZodEffects<z.ZodString, `0x${string}`, string>>;
    }, "strip", z.ZodTypeAny, {
        chainId: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
        receiverAddress: `0x${string}`;
        superToken: {
            address: `0x${string}`;
        };
        transferAmountEther?: `${number}` | undefined;
        flowRate?: {
            amountEther: `${number}`;
            period: "day" | "week" | "month" | "year";
        } | undefined;
        userData?: `0x${string}` | undefined;
    }, {
        chainId: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
        receiverAddress: string;
        superToken: {
            address: string;
        };
        transferAmountEther?: string | undefined;
        flowRate?: {
            amountEther: string;
            period: "day" | "week" | "month" | "year";
        } | undefined;
        userData?: string | undefined;
    }>, {
        chainId: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
        receiverAddress: `0x${string}`;
        superToken: {
            address: `0x${string}`;
        };
        transferAmountEther?: `${number}` | undefined;
        flowRate?: {
            amountEther: `${number}`;
            period: "day" | "week" | "month" | "year";
        } | undefined;
        userData?: `0x${string}` | undefined;
    }, {
        chainId: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
        receiverAddress: string;
        superToken: {
            address: string;
        };
        transferAmountEther?: string | undefined;
        flowRate?: {
            amountEther: string;
            period: "day" | "week" | "month" | "year";
        } | undefined;
        userData?: string | undefined;
    }>;
    superToken: z.ZodType<SuperTokenInfo, z.ZodTypeDef, SuperTokenInfo>;
    underlyingToken: z.ZodNullable<z.ZodType<TokenInfo, z.ZodTypeDef, TokenInfo>>;
}, "strip", z.ZodTypeAny, {
    superToken: TokenInfo & import("@superfluid-finance/tokenlist").SuperTokenExtensions;
    underlyingToken: TokenInfo | null;
    paymentOption: {
        chainId: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
        receiverAddress: `0x${string}`;
        superToken: {
            address: `0x${string}`;
        };
        transferAmountEther?: `${number}` | undefined;
        flowRate?: {
            amountEther: `${number}`;
            period: "day" | "week" | "month" | "year";
        } | undefined;
        userData?: `0x${string}` | undefined;
    };
}, {
    superToken: TokenInfo & import("@superfluid-finance/tokenlist").SuperTokenExtensions;
    underlyingToken: TokenInfo | null;
    paymentOption: {
        chainId: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
        receiverAddress: string;
        superToken: {
            address: string;
        };
        transferAmountEther?: string | undefined;
        flowRate?: {
            amountEther: string;
            period: "day" | "week" | "month" | "year";
        } | undefined;
        userData?: string | undefined;
    };
}>;
export interface PaymentOptionWithTokenInfo extends z.infer<typeof paymentOptionWithTokenInfoSchema> {
}
export declare const checkoutFormSchema: z.ZodObject<{
    accountAddress: z.ZodEffects<z.ZodString, `0x${string}`, string>;
    network: z.ZodEffects<z.ZodEffects<z.ZodObject<{
        id: z.ZodType<1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111, z.ZodTypeDef, 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111>;
    }, "strip", z.ZodTypeAny, {
        id: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
    }, {
        id: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
    }>, SupportedNetwork, {
        id: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
    }>, SupportedNetwork, {
        id: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
    }>;
    paymentOptionWithTokenInfo: z.ZodObject<{
        paymentOption: z.ZodEffects<z.ZodObject<{
            receiverAddress: z.ZodEffects<z.ZodString, `0x${string}`, string>;
            chainId: z.ZodType<1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111, z.ZodTypeDef, 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111>;
            superToken: z.ZodObject<{
                address: z.ZodEffects<z.ZodString, `0x${string}`, string>;
            }, "strip", z.ZodTypeAny, {
                address: `0x${string}`;
            }, {
                address: string;
            }>;
            transferAmountEther: z.ZodOptional<z.ZodEffects<z.ZodEffects<z.ZodString, `${number}`, string>, `${number}`, string>>;
            flowRate: z.ZodOptional<z.ZodEffects<z.ZodObject<{
                amountEther: z.ZodEffects<z.ZodString, `${number}`, string>;
                period: z.ZodEnum<["day", "week", "month", "year"]>;
            }, "strip", z.ZodTypeAny, {
                amountEther: `${number}`;
                period: "day" | "week" | "month" | "year";
            }, {
                amountEther: string;
                period: "day" | "week" | "month" | "year";
            }>, {
                amountEther: `${number}`;
                period: "day" | "week" | "month" | "year";
            }, {
                amountEther: string;
                period: "day" | "week" | "month" | "year";
            }>>;
            userData: z.ZodOptional<z.ZodEffects<z.ZodString, `0x${string}`, string>>;
        }, "strip", z.ZodTypeAny, {
            chainId: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
            receiverAddress: `0x${string}`;
            superToken: {
                address: `0x${string}`;
            };
            transferAmountEther?: `${number}` | undefined;
            flowRate?: {
                amountEther: `${number}`;
                period: "day" | "week" | "month" | "year";
            } | undefined;
            userData?: `0x${string}` | undefined;
        }, {
            chainId: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
            receiverAddress: string;
            superToken: {
                address: string;
            };
            transferAmountEther?: string | undefined;
            flowRate?: {
                amountEther: string;
                period: "day" | "week" | "month" | "year";
            } | undefined;
            userData?: string | undefined;
        }>, {
            chainId: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
            receiverAddress: `0x${string}`;
            superToken: {
                address: `0x${string}`;
            };
            transferAmountEther?: `${number}` | undefined;
            flowRate?: {
                amountEther: `${number}`;
                period: "day" | "week" | "month" | "year";
            } | undefined;
            userData?: `0x${string}` | undefined;
        }, {
            chainId: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
            receiverAddress: string;
            superToken: {
                address: string;
            };
            transferAmountEther?: string | undefined;
            flowRate?: {
                amountEther: string;
                period: "day" | "week" | "month" | "year";
            } | undefined;
            userData?: string | undefined;
        }>;
        superToken: z.ZodType<SuperTokenInfo, z.ZodTypeDef, SuperTokenInfo>;
        underlyingToken: z.ZodNullable<z.ZodType<TokenInfo, z.ZodTypeDef, TokenInfo>>;
    }, "strip", z.ZodTypeAny, {
        superToken: TokenInfo & import("@superfluid-finance/tokenlist").SuperTokenExtensions;
        underlyingToken: TokenInfo | null;
        paymentOption: {
            chainId: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
            receiverAddress: `0x${string}`;
            superToken: {
                address: `0x${string}`;
            };
            transferAmountEther?: `${number}` | undefined;
            flowRate?: {
                amountEther: `${number}`;
                period: "day" | "week" | "month" | "year";
            } | undefined;
            userData?: `0x${string}` | undefined;
        };
    }, {
        superToken: TokenInfo & import("@superfluid-finance/tokenlist").SuperTokenExtensions;
        underlyingToken: TokenInfo | null;
        paymentOption: {
            chainId: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
            receiverAddress: string;
            superToken: {
                address: string;
            };
            transferAmountEther?: string | undefined;
            flowRate?: {
                amountEther: string;
                period: "day" | "week" | "month" | "year";
            } | undefined;
            userData?: string | undefined;
        };
    }>;
    personalData: z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        label: z.ZodString;
        required: z.ZodOptional<z.ZodObject<{
            pattern: z.ZodEffects<z.ZodString, string, string>;
            message: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            message: string;
            pattern: string;
        }, {
            message: string;
            pattern: string;
        }>>;
        optional: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
        disabled: z.ZodOptional<z.ZodBoolean>;
        size: z.ZodOptional<z.ZodDefault<z.ZodEnum<["half", "full"]>>>;
        value: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        label: string;
        value?: string | undefined;
        size?: "half" | "full" | undefined;
        required?: {
            message: string;
            pattern: string;
        } | undefined;
        optional?: boolean | undefined;
        disabled?: boolean | undefined;
    }, {
        name: string;
        label: string;
        value?: string | undefined;
        size?: "half" | "full" | undefined;
        required?: {
            message: string;
            pattern: string;
        } | undefined;
        optional?: boolean | undefined;
        disabled?: boolean | undefined;
    }>, "many">;
    flowRate: z.ZodEffects<z.ZodObject<{
        amountEther: z.ZodEffects<z.ZodString, `${number}`, string>;
        period: z.ZodEnum<["day", "week", "month", "year"]>;
    }, "strip", z.ZodTypeAny, {
        amountEther: `${number}`;
        period: "day" | "week" | "month" | "year";
    }, {
        amountEther: string;
        period: "day" | "week" | "month" | "year";
    }>, {
        amountEther: `${number}`;
        period: "day" | "week" | "month" | "year";
    }, {
        amountEther: string;
        period: "day" | "week" | "month" | "year";
    }>;
    wrapAmountInUnits: z.ZodEffects<z.ZodEffects<z.ZodString, `${number}`, string>, `${number}`, string>;
    enableAutoWrap: z.ZodOptional<z.ZodBoolean>;
    modifyFlowRateBehaviour: z.ZodDefault<z.ZodPipeline<z.ZodString, z.ZodEnum<["ADD", "SET", "ENSURE"]>>>;
}, "strip", z.ZodTypeAny, {
    network: SupportedNetwork;
    flowRate: {
        amountEther: `${number}`;
        period: "day" | "week" | "month" | "year";
    };
    modifyFlowRateBehaviour: "ADD" | "SET" | "ENSURE";
    personalData: {
        name: string;
        label: string;
        value?: string | undefined;
        size?: "half" | "full" | undefined;
        required?: {
            message: string;
            pattern: string;
        } | undefined;
        optional?: boolean | undefined;
        disabled?: boolean | undefined;
    }[];
    accountAddress: `0x${string}`;
    paymentOptionWithTokenInfo: {
        superToken: TokenInfo & import("@superfluid-finance/tokenlist").SuperTokenExtensions;
        underlyingToken: TokenInfo | null;
        paymentOption: {
            chainId: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
            receiverAddress: `0x${string}`;
            superToken: {
                address: `0x${string}`;
            };
            transferAmountEther?: `${number}` | undefined;
            flowRate?: {
                amountEther: `${number}`;
                period: "day" | "week" | "month" | "year";
            } | undefined;
            userData?: `0x${string}` | undefined;
        };
    };
    wrapAmountInUnits: `${number}`;
    enableAutoWrap?: boolean | undefined;
}, {
    network: {
        id: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
    };
    flowRate: {
        amountEther: string;
        period: "day" | "week" | "month" | "year";
    };
    personalData: {
        name: string;
        label: string;
        value?: string | undefined;
        size?: "half" | "full" | undefined;
        required?: {
            message: string;
            pattern: string;
        } | undefined;
        optional?: boolean | undefined;
        disabled?: boolean | undefined;
    }[];
    accountAddress: string;
    paymentOptionWithTokenInfo: {
        superToken: TokenInfo & import("@superfluid-finance/tokenlist").SuperTokenExtensions;
        underlyingToken: TokenInfo | null;
        paymentOption: {
            chainId: 1 | 42161 | 43114 | 43113 | 8453 | 56 | 42220 | 100 | 10 | 11155420 | 137 | 534352 | 534351 | 11155111;
            receiverAddress: string;
            superToken: {
                address: string;
            };
            transferAmountEther?: string | undefined;
            flowRate?: {
                amountEther: string;
                period: "day" | "week" | "month" | "year";
            } | undefined;
            userData?: string | undefined;
        };
    };
    wrapAmountInUnits: string;
    modifyFlowRateBehaviour?: string | undefined;
    enableAutoWrap?: boolean | undefined;
}>;
export type ValidFormValues = z.infer<typeof checkoutFormSchema>;
export type DraftFormValues = NullableKeys<ValidFormValues, "accountAddress" | "network" | "paymentOptionWithTokenInfo">;
export type FormReturn = UseFormReturn<DraftFormValues, any, ValidFormValues>;
export type NullableKeys<T, K extends keyof T> = Omit<T, K> & {
    [P in K]: T[P] | null;
};
export {};
//# sourceMappingURL=formValues.d.ts.map