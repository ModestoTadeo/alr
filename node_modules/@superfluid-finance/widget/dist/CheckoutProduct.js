import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Box, Card, CardMedia, Collapse, Divider, Paper, Stack, Typography, useMediaQuery, } from "@mui/material";
import { useCallback, useState } from "react";
import { useFormContext } from "react-hook-form";
import ExpandIcon from "./ExpandIcon.js";
import NetworkBadge from "./NetworkBadge.js";
import { useWidget } from "./WidgetContext.js";
export default function CheckoutProduct({ CardProps }) {
    const [showDetails, setShowDetails] = useState(false);
    const collapsableDetails = useMediaQuery("@media all and (max-height: 840px)");
    const { productDetails: { name, description, imageURI }, layout: { elevated }, } = useWidget();
    const { watch } = useFormContext();
    const [network, paymentOptionWithTokenInfo, flowRate] = watch([
        "network",
        "paymentOptionWithTokenInfo",
        "flowRate",
    ]);
    const toggleDetails = useCallback(() => setShowDetails(!showDetails), [showDetails]);
    return (_jsxs(Card, { variant: elevated ? "elevation" : "outlined", ...CardProps, children: [_jsxs(Paper, { "data-testid": "selected-option-paper", component: Stack, variant: "outlined", flexDirection: "row", gap: 2, sx: { m: "-1px" }, children: [imageURI && (_jsx(CardMedia, { "data-testid": "widget-product-image", sx: { minWidth: "calc(100% / 3)", borderRadius: 1 }, image: imageURI, title: "product image" })), _jsxs(Box, { component: Stack, gap: 1, flex: 1, sx: {
                            position: "relative",
                            pl: imageURI ? 0 : 3.5,
                            pr: imageURI ? 5 : 3.5,
                            pb: 4,
                            pt: 6,
                        }, children: [_jsx(Typography, { "data-testid": "product-name", gutterBottom: true, variant: "subtitle2", color: "text.secondary", fontWeight: 500, component: "div", children: name }), _jsx(Divider, {}), _jsxs(Box, { children: [_jsx(Typography, { variant: "body1", color: "text.secondary", children: "Pay in Stream" }), paymentOptionWithTokenInfo && (_jsxs(_Fragment, { children: [_jsxs(Stack, { direction: "row", alignItems: "center", gap: 1, children: [_jsx(Typography, { variant: "h2", component: "span", "data-testid": "main-token-amount", children: flowRate.amountEther }), _jsxs(Stack, { direction: "column", children: [_jsx(Typography, { "data-testid": "main-token-selected", variant: "caption", color: "text.secondary", children: paymentOptionWithTokenInfo.superToken.symbol }), _jsxs(Typography, { variant: "caption", color: "text.secondary", "data-testid": "main-flow-rate-period", children: ["per ", flowRate.period] })] })] }), paymentOptionWithTokenInfo.paymentOption
                                                .transferAmountEther && (_jsxs(Typography, { "data-testid": "upfront-fee", variant: "body1", color: "text.secondary", children: ["+", paymentOptionWithTokenInfo.paymentOption
                                                        .transferAmountEther, " ", paymentOptionWithTokenInfo.superToken.symbol, " upfront fee"] }))] }))] }), network && (_jsx(NetworkBadge, { network: network, AvatarProps: {
                                    sx: {
                                        position: "absolute",
                                        top: 0,
                                        right: "32px",
                                    },
                                } }))] })] }), description && (_jsxs(Box, { sx: { px: 3.5, pb: 2.5, pt: 2 }, children: [_jsxs(Stack, { direction: "row", alignItems: "center", justifyContent: "space-between", sx: { cursor: collapsableDetails ? "pointer" : "initial" }, onClick: toggleDetails, children: [_jsx(Typography, { variant: "subtitle2", fontWeight: 500, color: "text.secondary", children: "Details" }), collapsableDetails && _jsx(ExpandIcon, { expanded: showDetails })] }), _jsx(Collapse, { in: !collapsableDetails || showDetails, children: _jsx(Typography, { "data-testid": "product-description", variant: "body2", color: "text.secondary", sx: { pt: 1, whiteSpace: "pre-wrap" }, children: description }) })] }))] }));
}
