import { createRoot } from "react-dom/client";
class WidgetWebComponent extends HTMLElement {
    connectedCallback() {
        const mountPoint = document.createElement("span");
        this.attachShadow({ mode: "open" }).appendChild(mountPoint);
        const productDetails = this.getAttribute("productDetails");
        const paymentDetails = this.getAttribute("paymentDetails");
        const tokenList = this.getAttribute("tokenList");
        const theme = this.getAttribute("theme");
        const type = this.getAttribute("type");
        const trigger = this.getAttribute("trigger");
        if (!(productDetails &&
            paymentDetails &&
            tokenList &&
            theme &&
            type &&
            trigger)) {
            throw new Error(`Missing required attributes ${JSON.stringify({
                productDetails,
                paymentDetails,
                tokenList,
                theme,
                type,
                trigger,
            })}`);
        }
        else {
            this.productDetails = JSON.parse(productDetails);
            this.paymentDetails = JSON.parse(paymentDetails);
            this.tokenList = JSON.parse(tokenList);
            this.theme = JSON.parse(theme);
            this.type = type;
            this.trigger = trigger;
        }
        createRoot(mountPoint).render(null);
    }
}
export default WidgetWebComponent;
window.customElements.get("superfluid-widget") ||
    window.customElements.define("superfluid-widget", WidgetWebComponent);
