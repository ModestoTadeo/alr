import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Box, Stack, Typography, useMediaQuery, useTheme } from "@mui/material";
import { useBalance } from "wagmi";
import { AccountAddressCard } from "../AccountAddressCard.js";
import StreamIndicator from "../StreamIndicator.js";
import { useWidget } from "../WidgetContext.js";
export function SubscribePreview({ command: cmd, }) {
    const theme = useTheme();
    const isBelowMd = useMediaQuery(theme.breakpoints.down("md"));
    const { getSuperToken } = useWidget();
    const superToken = getSuperToken(cmd.chainId, cmd.superTokenAddress);
    const { data: tokenBalance } = useBalance({
        token: cmd.superTokenAddress,
        address: cmd.accountAddress,
        chainId: cmd.chainId,
        formatUnits: "ether",
    });
    return (_jsxs(Stack, { direction: "column", alignItems: "center", spacing: 3, width: "100%", children: [_jsxs(Stack, { sx: {
                    display: "grid",
                    gridTemplateColumns: "1fr auto 1fr",
                    rowGap: 1.25,
                    [theme.breakpoints.down("md")]: {
                        gridTemplateColumns: "1fr",
                    },
                }, alignItems: "center", width: "100%", children: [_jsx(Typography, { variant: "caption", fontWeight: "medium", children: "Sender" }), !isBelowMd && _jsx(Box, {}), _jsx(Typography, { variant: "caption", fontWeight: "medium", sx: {
                            [theme.breakpoints.down("md")]: {
                                gridRow: 4,
                            },
                        }, children: "Receiver" }), _jsx(AccountAddressCard, { dataTest: "sender", address: cmd.accountAddress, PaperProps: { sx: { zIndex: 2 } } }), _jsx(StreamIndicator, { sx: {
                            mx: -1,
                            zIndex: 0,
                            [theme.breakpoints.down("md")]: {
                                transform: "rotate(90deg)",
                                justifySelf: "center",
                                transformOrigin: "center",
                                mb: -3.5,
                            },
                        } }), _jsx(AccountAddressCard, { dataTest: "receiver", address: cmd.receiverAddress, PaperProps: { sx: { zIndex: 2 } } })] }), _jsxs(Typography, { "data-testid": "review-supertoken-balance-and-symbol", variant: "caption", fontWeight: "medium", children: ["Balance: ", tokenBalance?.formatted, " ", superToken.symbol] })] }));
}
